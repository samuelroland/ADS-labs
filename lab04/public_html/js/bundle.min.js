if ("undefined" == typeof jQuery) throw new Error("Bootstrap's JavaScript requires jQuery");
+(function (t) {
    "use strict";
    var e = t.fn.jquery.split(" ")[0].split(".");
    if ((e[0] < 2 && e[1] < 9) || (1 == e[0] && 9 == e[1] && e[2] < 1) || e[0] > 2) throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 3");
})(jQuery),
    (function (t) {
        "use strict";
        function e() {
            var t = document.createElement("bootstrap"),
                e = { WebkitTransition: "webkitTransitionEnd", MozTransition: "transitionend", OTransition: "oTransitionEnd otransitionend", transition: "transitionend" };
            for (var n in e) if (void 0 !== t.style[n]) return { end: e[n] };
            return !1;
        }
        (t.fn.emulateTransitionEnd = function (e) {
            var n = !1,
                i = this;
            t(this).one("bsTransitionEnd", function () {
                n = !0;
            });
            return (
                setTimeout(function () {
                    n || t(i).trigger(t.support.transition.end);
                }, e),
                this
            );
        }),
            t(function () {
                (t.support.transition = e()),
                    t.support.transition &&
                        (t.event.special.bsTransitionEnd = {
                            bindType: t.support.transition.end,
                            delegateType: t.support.transition.end,
                            handle: function (e) {
                                if (t(e.target).is(this)) return e.handleObj.handler.apply(this, arguments);
                            },
                        });
            });
    })(jQuery),
    (function (t) {
        "use strict";
        var e = '[data-dismiss="alert"]',
            n = function (n) {
                t(n).on("click", e, this.close);
            };
        (n.VERSION = "3.3.6"),
            (n.TRANSITION_DURATION = 150),
            (n.prototype.close = function (e) {
                function i() {
                    a.detach().trigger("closed.bs.alert").remove();
                }
                var s = t(this),
                    o = s.attr("data-target");
                o || ((o = s.attr("href")), (o = o && o.replace(/.*(?=#[^\s]*$)/, "")));
                var a = t(o);
                e && e.preventDefault(),
                    a.length || (a = s.closest(".alert")),
                    a.trigger((e = t.Event("close.bs.alert"))),
                    e.isDefaultPrevented() || (a.removeClass("in"), t.support.transition && a.hasClass("fade") ? a.one("bsTransitionEnd", i).emulateTransitionEnd(n.TRANSITION_DURATION) : i());
            });
        var i = t.fn.alert;
        (t.fn.alert = function (e) {
            return this.each(function () {
                var i = t(this),
                    s = i.data("bs.alert");
                s || i.data("bs.alert", (s = new n(this))), "string" == typeof e && s[e].call(i);
            });
        }),
            (t.fn.alert.Constructor = n),
            (t.fn.alert.noConflict = function () {
                return (t.fn.alert = i), this;
            }),
            t(document).on("click.bs.alert.data-api", e, n.prototype.close);
    })(jQuery),
    (function (t) {
        "use strict";
        function e(e) {
            return this.each(function () {
                var i = t(this),
                    s = i.data("bs.button"),
                    o = "object" == typeof e && e;
                s || i.data("bs.button", (s = new n(this, o))), "toggle" == e ? s.toggle() : e && s.setState(e);
            });
        }
        var n = function (e, i) {
            (this.$element = t(e)), (this.options = t.extend({}, n.DEFAULTS, i)), (this.isLoading = !1);
        };
        (n.VERSION = "3.3.6"),
            (n.DEFAULTS = { loadingText: "loading..." }),
            (n.prototype.setState = function (e) {
                var n = "disabled",
                    i = this.$element,
                    s = i.is("input") ? "val" : "html",
                    o = i.data();
                (e += "Text"),
                    null == o.resetText && i.data("resetText", i[s]()),
                    setTimeout(
                        t.proxy(function () {
                            i[s](null == o[e] ? this.options[e] : o[e]), "loadingText" == e ? ((this.isLoading = !0), i.addClass(n).attr(n, n)) : this.isLoading && ((this.isLoading = !1), i.removeClass(n).removeAttr(n));
                        }, this),
                        0
                    );
            }),
            (n.prototype.toggle = function () {
                var t = !0,
                    e = this.$element.closest('[data-toggle="buttons"]');
                if (e.length) {
                    var n = this.$element.find("input");
                    "radio" == n.prop("type")
                        ? (n.prop("checked") && (t = !1), e.find(".active").removeClass("active"), this.$element.addClass("active"))
                        : "checkbox" == n.prop("type") && (n.prop("checked") !== this.$element.hasClass("active") && (t = !1), this.$element.toggleClass("active")),
                        n.prop("checked", this.$element.hasClass("active")),
                        t && n.trigger("change");
                } else this.$element.attr("aria-pressed", !this.$element.hasClass("active")), this.$element.toggleClass("active");
            });
        var i = t.fn.button;
        (t.fn.button = e),
            (t.fn.button.Constructor = n),
            (t.fn.button.noConflict = function () {
                return (t.fn.button = i), this;
            }),
            t(document)
                .on("click.bs.button.data-api", '[data-toggle^="button"]', function (n) {
                    var i = t(n.target).closest(".btn");
                    e.call(i, "toggle"), t(n.target).is('input[type="radio"], input[type="checkbox"]') || (n.preventDefault(), i.is("input,button") ? i.trigger("focus") : i.find("input:visible,button:visible").first().trigger("focus"));
                })
                .on("focus.bs.button.data-api blur.bs.button.data-api", '[data-toggle^="button"]', function (e) {
                    t(e.target)
                        .closest(".btn")
                        .toggleClass("focus", /^focus(in)?$/.test(e.type));
                });
    })(jQuery),
    (function (t) {
        "use strict";
        function e(e) {
            return this.each(function () {
                var i = t(this),
                    s = i.data("bs.carousel"),
                    o = t.extend({}, n.DEFAULTS, i.data(), "object" == typeof e && e),
                    a = "string" == typeof e ? e : o.slide;
                s || i.data("bs.carousel", (s = new n(this, o))), "number" == typeof e ? s.to(e) : a ? s[a]() : o.interval && s.pause().cycle();
            });
        }
        var n = function (e, n) {
            (this.$element = t(e)),
                (this.$indicators = this.$element.find(".carousel-indicators")),
                (this.options = n),
                (this.paused = null),
                (this.sliding = null),
                (this.interval = null),
                (this.$active = null),
                (this.$items = null),
                this.options.keyboard && this.$element.on("keydown.bs.carousel", t.proxy(this.keydown, this)),
                "hover" == this.options.pause && !("ontouchstart" in document.documentElement) && this.$element.on("mouseenter.bs.carousel", t.proxy(this.pause, this)).on("mouseleave.bs.carousel", t.proxy(this.cycle, this));
        };
        (n.VERSION = "3.3.6"),
            (n.TRANSITION_DURATION = 600),
            (n.DEFAULTS = { interval: 5e3, pause: "hover", wrap: !0, keyboard: !0 }),
            (n.prototype.keydown = function (t) {
                if (!/input|textarea/i.test(t.target.tagName)) {
                    switch (t.which) {
                        case 37:
                            this.prev();
                            break;
                        case 39:
                            this.next();
                            break;
                        default:
                            return;
                    }
                    t.preventDefault();
                }
            }),
            (n.prototype.cycle = function (e) {
                return e || (this.paused = !1), this.interval && clearInterval(this.interval), this.options.interval && !this.paused && (this.interval = setInterval(t.proxy(this.next, this), this.options.interval)), this;
            }),
            (n.prototype.getItemIndex = function (t) {
                return (this.$items = t.parent().children(".item")), this.$items.index(t || this.$active);
            }),
            (n.prototype.getItemForDirection = function (t, e) {
                var n = this.getItemIndex(e);
                if ((("prev" == t && 0 === n) || ("next" == t && n == this.$items.length - 1)) && !this.options.wrap) return e;
                var i = (n + ("prev" == t ? -1 : 1)) % this.$items.length;
                return this.$items.eq(i);
            }),
            (n.prototype.to = function (t) {
                var e = this,
                    n = this.getItemIndex((this.$active = this.$element.find(".item.active")));
                if (!(t > this.$items.length - 1 || t < 0))
                    return this.sliding
                        ? this.$element.one("slid.bs.carousel", function () {
                              e.to(t);
                          })
                        : n == t
                        ? this.pause().cycle()
                        : this.slide(t > n ? "next" : "prev", this.$items.eq(t));
            }),
            (n.prototype.pause = function (e) {
                return e || (this.paused = !0), this.$element.find(".next, .prev").length && t.support.transition && (this.$element.trigger(t.support.transition.end), this.cycle(!0)), (this.interval = clearInterval(this.interval)), this;
            }),
            (n.prototype.next = function () {
                if (!this.sliding) return this.slide("next");
            }),
            (n.prototype.prev = function () {
                if (!this.sliding) return this.slide("prev");
            }),
            (n.prototype.slide = function (e, i) {
                var s = this.$element.find(".item.active"),
                    o = i || this.getItemForDirection(e, s),
                    a = this.interval,
                    r = "next" == e ? "left" : "right",
                    l = this;
                if (o.hasClass("active")) return (this.sliding = !1);
                var d = o[0],
                    c = t.Event("slide.bs.carousel", { relatedTarget: d, direction: r });
                if ((this.$element.trigger(c), !c.isDefaultPrevented())) {
                    if (((this.sliding = !0), a && this.pause(), this.$indicators.length)) {
                        this.$indicators.find(".active").removeClass("active");
                        var h = t(this.$indicators.children()[this.getItemIndex(o)]);
                        h && h.addClass("active");
                    }
                    var p = t.Event("slid.bs.carousel", { relatedTarget: d, direction: r });
                    return (
                        t.support.transition && this.$element.hasClass("slide")
                            ? (o.addClass(e),
                              o[0].offsetWidth,
                              s.addClass(r),
                              o.addClass(r),
                              s
                                  .one("bsTransitionEnd", function () {
                                      o.removeClass([e, r].join(" ")).addClass("active"),
                                          s.removeClass(["active", r].join(" ")),
                                          (l.sliding = !1),
                                          setTimeout(function () {
                                              l.$element.trigger(p);
                                          }, 0);
                                  })
                                  .emulateTransitionEnd(n.TRANSITION_DURATION))
                            : (s.removeClass("active"), o.addClass("active"), (this.sliding = !1), this.$element.trigger(p)),
                        a && this.cycle(),
                        this
                    );
                }
            });
        var i = t.fn.carousel;
        (t.fn.carousel = e),
            (t.fn.carousel.Constructor = n),
            (t.fn.carousel.noConflict = function () {
                return (t.fn.carousel = i), this;
            });
        var s = function (n) {
            var i,
                s = t(this),
                o = t(s.attr("data-target") || ((i = s.attr("href")) && i.replace(/.*(?=#[^\s]+$)/, "")));
            if (o.hasClass("carousel")) {
                var a = t.extend({}, o.data(), s.data()),
                    r = s.attr("data-slide-to");
                r && (a.interval = !1), e.call(o, a), r && o.data("bs.carousel").to(r), n.preventDefault();
            }
        };
        t(document).on("click.bs.carousel.data-api", "[data-slide]", s).on("click.bs.carousel.data-api", "[data-slide-to]", s),
            t(window).on("load", function () {
                t('[data-ride="carousel"]').each(function () {
                    var n = t(this);
                    e.call(n, n.data());
                });
            });
    })(jQuery),
    (function (t) {
        "use strict";
        function e(e) {
            var n,
                i = e.attr("data-target") || ((n = e.attr("href")) && n.replace(/.*(?=#[^\s]+$)/, ""));
            return t(i);
        }
        function n(e) {
            return this.each(function () {
                var n = t(this),
                    s = n.data("bs.collapse"),
                    o = t.extend({}, i.DEFAULTS, n.data(), "object" == typeof e && e);
                !s && o.toggle && /show|hide/.test(e) && (o.toggle = !1), s || n.data("bs.collapse", (s = new i(this, o))), "string" == typeof e && s[e]();
            });
        }
        var i = function (e, n) {
            (this.$element = t(e)),
                (this.options = t.extend({}, i.DEFAULTS, n)),
                (this.$trigger = t('[data-toggle="collapse"][href="#' + e.id + '"],[data-toggle="collapse"][data-target="#' + e.id + '"]')),
                (this.transitioning = null),
                this.options.parent ? (this.$parent = this.getParent()) : this.addAriaAndCollapsedClass(this.$element, this.$trigger),
                this.options.toggle && this.toggle();
        };
        (i.VERSION = "3.3.6"),
            (i.TRANSITION_DURATION = 350),
            (i.DEFAULTS = { toggle: !0 }),
            (i.prototype.dimension = function () {
                return this.$element.hasClass("width") ? "width" : "height";
            }),
            (i.prototype.show = function () {
                if (!this.transitioning && !this.$element.hasClass("in")) {
                    var e,
                        s = this.$parent && this.$parent.children(".panel").children(".in, .collapsing");
                    if (!(s && s.length && (e = s.data("bs.collapse")) && e.transitioning)) {
                        var o = t.Event("show.bs.collapse");
                        if ((this.$element.trigger(o), !o.isDefaultPrevented())) {
                            s && s.length && (n.call(s, "hide"), e || s.data("bs.collapse", null));
                            var a = this.dimension();
                            this.$element.removeClass("collapse").addClass("collapsing")[a](0).attr("aria-expanded", !0), this.$trigger.removeClass("collapsed").attr("aria-expanded", !0), (this.transitioning = 1);
                            var r = function () {
                                this.$element.removeClass("collapsing").addClass("collapse in")[a](""), (this.transitioning = 0), this.$element.trigger("shown.bs.collapse");
                            };
                            if (!t.support.transition) return r.call(this);
                            var l = t.camelCase(["scroll", a].join("-"));
                            this.$element.one("bsTransitionEnd", t.proxy(r, this)).emulateTransitionEnd(i.TRANSITION_DURATION)[a](this.$element[0][l]);
                        }
                    }
                }
            }),
            (i.prototype.hide = function () {
                if (!this.transitioning && this.$element.hasClass("in")) {
                    var e = t.Event("hide.bs.collapse");
                    if ((this.$element.trigger(e), !e.isDefaultPrevented())) {
                        var n = this.dimension();
                        this.$element[n](this.$element[n]())[0].offsetHeight,
                            this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded", !1),
                            this.$trigger.addClass("collapsed").attr("aria-expanded", !1),
                            (this.transitioning = 1);
                        var s = function () {
                            (this.transitioning = 0), this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse");
                        };
                        return t.support.transition ? void this.$element[n](0).one("bsTransitionEnd", t.proxy(s, this)).emulateTransitionEnd(i.TRANSITION_DURATION) : s.call(this);
                    }
                }
            }),
            (i.prototype.toggle = function () {
                this[this.$element.hasClass("in") ? "hide" : "show"]();
            }),
            (i.prototype.getParent = function () {
                return t(this.options.parent)
                    .find('[data-toggle="collapse"][data-parent="' + this.options.parent + '"]')
                    .each(
                        t.proxy(function (n, i) {
                            var s = t(i);
                            this.addAriaAndCollapsedClass(e(s), s);
                        }, this)
                    )
                    .end();
            }),
            (i.prototype.addAriaAndCollapsedClass = function (t, e) {
                var n = t.hasClass("in");
                t.attr("aria-expanded", n), e.toggleClass("collapsed", !n).attr("aria-expanded", n);
            });
        var s = t.fn.collapse;
        (t.fn.collapse = n),
            (t.fn.collapse.Constructor = i),
            (t.fn.collapse.noConflict = function () {
                return (t.fn.collapse = s), this;
            }),
            t(document).on("click.bs.collapse.data-api", '[data-toggle="collapse"]', function (i) {
                var s = t(this);
                s.attr("data-target") || i.preventDefault();
                var o = e(s),
                    a = o.data("bs.collapse") ? "toggle" : s.data();
                n.call(o, a);
            });
    })(jQuery),
    (function (t) {
        "use strict";
        function e(e) {
            var n = e.attr("data-target");
            n || ((n = e.attr("href")), (n = n && /#[A-Za-z]/.test(n) && n.replace(/.*(?=#[^\s]*$)/, "")));
            var i = n && t(n);
            return i && i.length ? i : e.parent();
        }
        function n(n) {
            (n && 3 === n.which) ||
                (t(i).remove(),
                t(s).each(function () {
                    var i = t(this),
                        s = e(i),
                        o = { relatedTarget: this };
                    s.hasClass("open") &&
                        ((n && "click" == n.type && /input|textarea/i.test(n.target.tagName) && t.contains(s[0], n.target)) ||
                            (s.trigger((n = t.Event("hide.bs.dropdown", o))), n.isDefaultPrevented() || (i.attr("aria-expanded", "false"), s.removeClass("open").trigger(t.Event("hidden.bs.dropdown", o)))));
                }));
        }
        var i = ".dropdown-backdrop",
            s = '[data-toggle="dropdown"]',
            o = function (e) {
                t(e).on("click.bs.dropdown", this.toggle);
            };
        (o.VERSION = "3.3.6"),
            (o.prototype.toggle = function (i) {
                var s = t(this);
                if (!s.is(".disabled, :disabled")) {
                    var o = e(s),
                        a = o.hasClass("open");
                    if ((n(), !a)) {
                        "ontouchstart" in document.documentElement && !o.closest(".navbar-nav").length && t(document.createElement("div")).addClass("dropdown-backdrop").insertAfter(t(this)).on("click", n);
                        var r = { relatedTarget: this };
                        if ((o.trigger((i = t.Event("show.bs.dropdown", r))), i.isDefaultPrevented())) return;
                        s.trigger("focus").attr("aria-expanded", "true"), o.toggleClass("open").trigger(t.Event("shown.bs.dropdown", r));
                    }
                    return !1;
                }
            }),
            (o.prototype.keydown = function (n) {
                if (/(38|40|27|32)/.test(n.which) && !/input|textarea/i.test(n.target.tagName)) {
                    var i = t(this);
                    if ((n.preventDefault(), n.stopPropagation(), !i.is(".disabled, :disabled"))) {
                        var o = e(i),
                            a = o.hasClass("open");
                        if ((!a && 27 != n.which) || (a && 27 == n.which)) return 27 == n.which && o.find(s).trigger("focus"), i.trigger("click");
                        var r = o.find(".dropdown-menu li:not(.disabled):visible a");
                        if (r.length) {
                            var l = r.index(n.target);
                            38 == n.which && l > 0 && l--, 40 == n.which && l < r.length - 1 && l++, ~l || (l = 0), r.eq(l).trigger("focus");
                        }
                    }
                }
            });
        var a = t.fn.dropdown;
        (t.fn.dropdown = function (e) {
            return this.each(function () {
                var n = t(this),
                    i = n.data("bs.dropdown");
                i || n.data("bs.dropdown", (i = new o(this))), "string" == typeof e && i[e].call(n);
            });
        }),
            (t.fn.dropdown.Constructor = o),
            (t.fn.dropdown.noConflict = function () {
                return (t.fn.dropdown = a), this;
            }),
            t(document)
                .on("click.bs.dropdown.data-api", n)
                .on("click.bs.dropdown.data-api", ".dropdown form", function (t) {
                    t.stopPropagation();
                })
                .on("click.bs.dropdown.data-api", s, o.prototype.toggle)
                .on("keydown.bs.dropdown.data-api", s, o.prototype.keydown)
                .on("keydown.bs.dropdown.data-api", ".dropdown-menu", o.prototype.keydown);
    })(jQuery),
    (function (t) {
        "use strict";
        function e(e, i) {
            return this.each(function () {
                var s = t(this),
                    o = s.data("bs.modal"),
                    a = t.extend({}, n.DEFAULTS, s.data(), "object" == typeof e && e);
                o || s.data("bs.modal", (o = new n(this, a))), "string" == typeof e ? o[e](i) : a.show && o.show(i);
            });
        }
        var n = function (e, n) {
            (this.options = n),
                (this.$body = t(document.body)),
                (this.$element = t(e)),
                (this.$dialog = this.$element.find(".modal-dialog")),
                (this.$backdrop = null),
                (this.isShown = null),
                (this.originalBodyPad = null),
                (this.scrollbarWidth = 0),
                (this.ignoreBackdropClick = !1),
                this.options.remote &&
                    this.$element.find(".modal-content").load(
                        this.options.remote,
                        t.proxy(function () {
                            this.$element.trigger("loaded.bs.modal");
                        }, this)
                    );
        };
        (n.VERSION = "3.3.6"),
            (n.TRANSITION_DURATION = 300),
            (n.BACKDROP_TRANSITION_DURATION = 150),
            (n.DEFAULTS = { backdrop: !0, keyboard: !0, show: !0 }),
            (n.prototype.toggle = function (t) {
                return this.isShown ? this.hide() : this.show(t);
            }),
            (n.prototype.show = function (e) {
                var i = this,
                    s = t.Event("show.bs.modal", { relatedTarget: e });
                this.$element.trigger(s),
                    this.isShown ||
                        s.isDefaultPrevented() ||
                        ((this.isShown = !0),
                        this.checkScrollbar(),
                        this.setScrollbar(),
                        this.$body.addClass("modal-open"),
                        this.escape(),
                        this.resize(),
                        this.$element.on("click.dismiss.bs.modal", '[data-dismiss="modal"]', t.proxy(this.hide, this)),
                        this.$dialog.on("mousedown.dismiss.bs.modal", function () {
                            i.$element.one("mouseup.dismiss.bs.modal", function (e) {
                                t(e.target).is(i.$element) && (i.ignoreBackdropClick = !0);
                            });
                        }),
                        this.backdrop(function () {
                            var s = t.support.transition && i.$element.hasClass("fade");
                            i.$element.parent().length || i.$element.appendTo(i.$body), i.$element.show().scrollTop(0), i.adjustDialog(), s && i.$element[0].offsetWidth, i.$element.addClass("in"), i.enforceFocus();
                            var o = t.Event("shown.bs.modal", { relatedTarget: e });
                            s
                                ? i.$dialog
                                      .one("bsTransitionEnd", function () {
                                          i.$element.trigger("focus").trigger(o);
                                      })
                                      .emulateTransitionEnd(n.TRANSITION_DURATION)
                                : i.$element.trigger("focus").trigger(o);
                        }));
            }),
            (n.prototype.hide = function (e) {
                e && e.preventDefault(),
                    (e = t.Event("hide.bs.modal")),
                    this.$element.trigger(e),
                    this.isShown &&
                        !e.isDefaultPrevented() &&
                        ((this.isShown = !1),
                        this.escape(),
                        this.resize(),
                        t(document).off("focusin.bs.modal"),
                        this.$element.removeClass("in").off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"),
                        this.$dialog.off("mousedown.dismiss.bs.modal"),
                        t.support.transition && this.$element.hasClass("fade") ? this.$element.one("bsTransitionEnd", t.proxy(this.hideModal, this)).emulateTransitionEnd(n.TRANSITION_DURATION) : this.hideModal());
            }),
            (n.prototype.enforceFocus = function () {
                t(document)
                    .off("focusin.bs.modal")
                    .on(
                        "focusin.bs.modal",
                        t.proxy(function (t) {
                            document === t.target || this.$element[0] === t.target || this.$element.has(t.target).length || this.$element.trigger("focus");
                        }, this)
                    );
            }),
            (n.prototype.escape = function () {
                this.isShown && this.options.keyboard
                    ? this.$element.on(
                          "keydown.dismiss.bs.modal",
                          t.proxy(function (t) {
                              27 == t.which && this.hide();
                          }, this)
                      )
                    : this.isShown || this.$element.off("keydown.dismiss.bs.modal");
            }),
            (n.prototype.resize = function () {
                this.isShown ? t(window).on("resize.bs.modal", t.proxy(this.handleUpdate, this)) : t(window).off("resize.bs.modal");
            }),
            (n.prototype.hideModal = function () {
                var t = this;
                this.$element.hide(),
                    this.backdrop(function () {
                        t.$body.removeClass("modal-open"), t.resetAdjustments(), t.resetScrollbar(), t.$element.trigger("hidden.bs.modal");
                    });
            }),
            (n.prototype.removeBackdrop = function () {
                this.$backdrop && this.$backdrop.remove(), (this.$backdrop = null);
            }),
            (n.prototype.backdrop = function (e) {
                var i = this,
                    s = this.$element.hasClass("fade") ? "fade" : "";
                if (this.isShown && this.options.backdrop) {
                    var o = t.support.transition && s;
                    if (
                        ((this.$backdrop = t(document.createElement("div"))
                            .addClass("modal-backdrop " + s)
                            .appendTo(this.$body)),
                        this.$element.on(
                            "click.dismiss.bs.modal",
                            t.proxy(function (t) {
                                return this.ignoreBackdropClick ? void (this.ignoreBackdropClick = !1) : void (t.target === t.currentTarget && ("static" == this.options.backdrop ? this.$element[0].focus() : this.hide()));
                            }, this)
                        ),
                        o && this.$backdrop[0].offsetWidth,
                        this.$backdrop.addClass("in"),
                        !e)
                    )
                        return;
                    o ? this.$backdrop.one("bsTransitionEnd", e).emulateTransitionEnd(n.BACKDROP_TRANSITION_DURATION) : e();
                } else if (!this.isShown && this.$backdrop) {
                    this.$backdrop.removeClass("in");
                    var a = function () {
                        i.removeBackdrop(), e && e();
                    };
                    t.support.transition && this.$element.hasClass("fade") ? this.$backdrop.one("bsTransitionEnd", a).emulateTransitionEnd(n.BACKDROP_TRANSITION_DURATION) : a();
                } else e && e();
            }),
            (n.prototype.handleUpdate = function () {
                this.adjustDialog();
            }),
            (n.prototype.adjustDialog = function () {
                var t = this.$element[0].scrollHeight > document.documentElement.clientHeight;
                this.$element.css({ paddingLeft: !this.bodyIsOverflowing && t ? this.scrollbarWidth : "", paddingRight: this.bodyIsOverflowing && !t ? this.scrollbarWidth : "" });
            }),
            (n.prototype.resetAdjustments = function () {
                this.$element.css({ paddingLeft: "", paddingRight: "" });
            }),
            (n.prototype.checkScrollbar = function () {
                var t = window.innerWidth;
                if (!t) {
                    var e = document.documentElement.getBoundingClientRect();
                    t = e.right - Math.abs(e.left);
                }
                (this.bodyIsOverflowing = document.body.clientWidth < t), (this.scrollbarWidth = this.measureScrollbar());
            }),
            (n.prototype.setScrollbar = function () {
                var t = parseInt(this.$body.css("padding-right") || 0, 10);
                (this.originalBodyPad = document.body.style.paddingRight || ""), this.bodyIsOverflowing && this.$body.css("padding-right", t + this.scrollbarWidth);
            }),
            (n.prototype.resetScrollbar = function () {
                this.$body.css("padding-right", this.originalBodyPad);
            }),
            (n.prototype.measureScrollbar = function () {
                var t = document.createElement("div");
                (t.className = "modal-scrollbar-measure"), this.$body.append(t);
                var e = t.offsetWidth - t.clientWidth;
                return this.$body[0].removeChild(t), e;
            });
        var i = t.fn.modal;
        (t.fn.modal = e),
            (t.fn.modal.Constructor = n),
            (t.fn.modal.noConflict = function () {
                return (t.fn.modal = i), this;
            }),
            t(document).on("click.bs.modal.data-api", '[data-toggle="modal"]', function (n) {
                var i = t(this),
                    s = i.attr("href"),
                    o = t(i.attr("data-target") || (s && s.replace(/.*(?=#[^\s]+$)/, ""))),
                    a = o.data("bs.modal") ? "toggle" : t.extend({ remote: !/#/.test(s) && s }, o.data(), i.data());
                i.is("a") && n.preventDefault(),
                    o.one("show.bs.modal", function (t) {
                        t.isDefaultPrevented() ||
                            o.one("hidden.bs.modal", function () {
                                i.is(":visible") && i.trigger("focus");
                            });
                    }),
                    e.call(o, a, this);
            });
    })(jQuery),
    (function (t) {
        "use strict";
        var e = function (t, e) {
            (this.type = null), (this.options = null), (this.enabled = null), (this.timeout = null), (this.hoverState = null), (this.$element = null), (this.inState = null), this.init("tooltip", t, e);
        };
        (e.VERSION = "3.3.6"),
            (e.TRANSITION_DURATION = 150),
            (e.DEFAULTS = {
                animation: !0,
                placement: "top",
                selector: !1,
                template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
                trigger: "hover focus",
                title: "",
                delay: 0,
                html: !1,
                container: !1,
                viewport: { selector: "body", padding: 0 },
            }),
            (e.prototype.init = function (e, n, i) {
                if (
                    ((this.enabled = !0),
                    (this.type = e),
                    (this.$element = t(n)),
                    (this.options = this.getOptions(i)),
                    (this.$viewport = this.options.viewport && t(t.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : this.options.viewport.selector || this.options.viewport)),
                    (this.inState = { click: !1, hover: !1, focus: !1 }),
                    this.$element[0] instanceof document.constructor && !this.options.selector)
                )
                    throw new Error("`selector` option must be specified when initializing " + this.type + " on the window.document object!");
                for (var s = this.options.trigger.split(" "), o = s.length; o--; ) {
                    var a = s[o];
                    if ("click" == a) this.$element.on("click." + this.type, this.options.selector, t.proxy(this.toggle, this));
                    else if ("manual" != a) {
                        var r = "hover" == a ? "mouseenter" : "focusin",
                            l = "hover" == a ? "mouseleave" : "focusout";
                        this.$element.on(r + "." + this.type, this.options.selector, t.proxy(this.enter, this)), this.$element.on(l + "." + this.type, this.options.selector, t.proxy(this.leave, this));
                    }
                }
                this.options.selector ? (this._options = t.extend({}, this.options, { trigger: "manual", selector: "" })) : this.fixTitle();
            }),
            (e.prototype.getDefaults = function () {
                return e.DEFAULTS;
            }),
            (e.prototype.getOptions = function (e) {
                return (e = t.extend({}, this.getDefaults(), this.$element.data(), e)).delay && "number" == typeof e.delay && (e.delay = { show: e.delay, hide: e.delay }), e;
            }),
            (e.prototype.getDelegateOptions = function () {
                var e = {},
                    n = this.getDefaults();
                return (
                    this._options &&
                        t.each(this._options, function (t, i) {
                            n[t] != i && (e[t] = i);
                        }),
                    e
                );
            }),
            (e.prototype.enter = function (e) {
                var n = e instanceof this.constructor ? e : t(e.currentTarget).data("bs." + this.type);
                return (
                    n || ((n = new this.constructor(e.currentTarget, this.getDelegateOptions())), t(e.currentTarget).data("bs." + this.type, n)),
                    e instanceof t.Event && (n.inState["focusin" == e.type ? "focus" : "hover"] = !0),
                    n.tip().hasClass("in") || "in" == n.hoverState
                        ? void (n.hoverState = "in")
                        : (clearTimeout(n.timeout),
                          (n.hoverState = "in"),
                          n.options.delay && n.options.delay.show
                              ? void (n.timeout = setTimeout(function () {
                                    "in" == n.hoverState && n.show();
                                }, n.options.delay.show))
                              : n.show())
                );
            }),
            (e.prototype.isInStateTrue = function () {
                for (var t in this.inState) if (this.inState[t]) return !0;
                return !1;
            }),
            (e.prototype.leave = function (e) {
                var n = e instanceof this.constructor ? e : t(e.currentTarget).data("bs." + this.type);
                if (
                    (n || ((n = new this.constructor(e.currentTarget, this.getDelegateOptions())), t(e.currentTarget).data("bs." + this.type, n)),
                    e instanceof t.Event && (n.inState["focusout" == e.type ? "focus" : "hover"] = !1),
                    !n.isInStateTrue())
                )
                    return (
                        clearTimeout(n.timeout),
                        (n.hoverState = "out"),
                        n.options.delay && n.options.delay.hide
                            ? void (n.timeout = setTimeout(function () {
                                  "out" == n.hoverState && n.hide();
                              }, n.options.delay.hide))
                            : n.hide()
                    );
            }),
            (e.prototype.show = function () {
                var n = t.Event("show.bs." + this.type);
                if (this.hasContent() && this.enabled) {
                    this.$element.trigger(n);
                    var i = t.contains(this.$element[0].ownerDocument.documentElement, this.$element[0]);
                    if (n.isDefaultPrevented() || !i) return;
                    var s = this,
                        o = this.tip(),
                        a = this.getUID(this.type);
                    this.setContent(), o.attr("id", a), this.$element.attr("aria-describedby", a), this.options.animation && o.addClass("fade");
                    var r = "function" == typeof this.options.placement ? this.options.placement.call(this, o[0], this.$element[0]) : this.options.placement,
                        l = /\s?auto?\s?/i,
                        d = l.test(r);
                    d && (r = r.replace(l, "") || "top"),
                        o
                            .detach()
                            .css({ top: 0, left: 0, display: "block" })
                            .addClass(r)
                            .data("bs." + this.type, this),
                        this.options.container ? o.appendTo(this.options.container) : o.insertAfter(this.$element),
                        this.$element.trigger("inserted.bs." + this.type);
                    var c = this.getPosition(),
                        h = o[0].offsetWidth,
                        p = o[0].offsetHeight;
                    if (d) {
                        var u = r,
                            f = this.getPosition(this.$viewport);
                        (r = "bottom" == r && c.bottom + p > f.bottom ? "top" : "top" == r && c.top - p < f.top ? "bottom" : "right" == r && c.right + h > f.width ? "left" : "left" == r && c.left - h < f.left ? "right" : r),
                            o.removeClass(u).addClass(r);
                    }
                    var v = this.getCalculatedOffset(r, c, h, p);
                    this.applyPlacement(v, r);
                    var m = function () {
                        var t = s.hoverState;
                        s.$element.trigger("shown.bs." + s.type), (s.hoverState = null), "out" == t && s.leave(s);
                    };
                    t.support.transition && this.$tip.hasClass("fade") ? o.one("bsTransitionEnd", m).emulateTransitionEnd(e.TRANSITION_DURATION) : m();
                }
            }),
            (e.prototype.applyPlacement = function (e, n) {
                var i = this.tip(),
                    s = i[0].offsetWidth,
                    o = i[0].offsetHeight,
                    a = parseInt(i.css("margin-top"), 10),
                    r = parseInt(i.css("margin-left"), 10);
                isNaN(a) && (a = 0),
                    isNaN(r) && (r = 0),
                    (e.top += a),
                    (e.left += r),
                    t.offset.setOffset(
                        i[0],
                        t.extend(
                            {
                                using: function (t) {
                                    i.css({ top: Math.round(t.top), left: Math.round(t.left) });
                                },
                            },
                            e
                        ),
                        0
                    ),
                    i.addClass("in");
                var l = i[0].offsetWidth,
                    d = i[0].offsetHeight;
                "top" == n && d != o && (e.top = e.top + o - d);
                var c = this.getViewportAdjustedDelta(n, e, l, d);
                c.left ? (e.left += c.left) : (e.top += c.top);
                var h = /top|bottom/.test(n),
                    p = h ? 2 * c.left - s + l : 2 * c.top - o + d,
                    u = h ? "offsetWidth" : "offsetHeight";
                i.offset(e), this.replaceArrow(p, i[0][u], h);
            }),
            (e.prototype.replaceArrow = function (t, e, n) {
                this.arrow()
                    .css(n ? "left" : "top", 50 * (1 - t / e) + "%")
                    .css(n ? "top" : "left", "");
            }),
            (e.prototype.setContent = function () {
                var t = this.tip(),
                    e = this.getTitle();
                t.find(".tooltip-inner")[this.options.html ? "html" : "text"](e), t.removeClass("fade in top bottom left right");
            }),
            (e.prototype.hide = function (n) {
                function i() {
                    "in" != s.hoverState && o.detach(), s.$element && s.$element.removeAttr("aria-describedby").trigger("hidden.bs." + s.type), n && n();
                }
                var s = this,
                    o = t(this.$tip),
                    a = t.Event("hide.bs." + this.type);
                if ((this.$element.trigger(a), !a.isDefaultPrevented()))
                    return o.removeClass("in"), t.support.transition && o.hasClass("fade") ? o.one("bsTransitionEnd", i).emulateTransitionEnd(e.TRANSITION_DURATION) : i(), (this.hoverState = null), this;
            }),
            (e.prototype.fixTitle = function () {
                var t = this.$element;
                (t.attr("title") || "string" != typeof t.attr("data-original-title")) && t.attr("data-original-title", t.attr("title") || "").attr("title", "");
            }),
            (e.prototype.hasContent = function () {
                return this.getTitle();
            }),
            (e.prototype.getPosition = function (e) {
                var n = (e = e || this.$element)[0],
                    i = "BODY" == n.tagName,
                    s = n.getBoundingClientRect();
                null == s.width && (s = t.extend({}, s, { width: s.right - s.left, height: s.bottom - s.top }));
                var o = i ? { top: 0, left: 0 } : e.offset(),
                    a = { scroll: i ? document.documentElement.scrollTop || document.body.scrollTop : e.scrollTop() },
                    r = i ? { width: t(window).width(), height: t(window).height() } : null;
                return t.extend({}, s, a, r, o);
            }),
            (e.prototype.getCalculatedOffset = function (t, e, n, i) {
                return "bottom" == t
                    ? { top: e.top + e.height, left: e.left + e.width / 2 - n / 2 }
                    : "top" == t
                    ? { top: e.top - i, left: e.left + e.width / 2 - n / 2 }
                    : "left" == t
                    ? { top: e.top + e.height / 2 - i / 2, left: e.left - n }
                    : { top: e.top + e.height / 2 - i / 2, left: e.left + e.width };
            }),
            (e.prototype.getViewportAdjustedDelta = function (t, e, n, i) {
                var s = { top: 0, left: 0 };
                if (!this.$viewport) return s;
                var o = (this.options.viewport && this.options.viewport.padding) || 0,
                    a = this.getPosition(this.$viewport);
                if (/right|left/.test(t)) {
                    var r = e.top - o - a.scroll,
                        l = e.top + o - a.scroll + i;
                    r < a.top ? (s.top = a.top - r) : l > a.top + a.height && (s.top = a.top + a.height - l);
                } else {
                    var d = e.left - o,
                        c = e.left + o + n;
                    d < a.left ? (s.left = a.left - d) : c > a.right && (s.left = a.left + a.width - c);
                }
                return s;
            }),
            (e.prototype.getTitle = function () {
                var t = this.$element,
                    e = this.options;
                return t.attr("data-original-title") || ("function" == typeof e.title ? e.title.call(t[0]) : e.title);
            }),
            (e.prototype.getUID = function (t) {
                do {
                    t += ~~(1e6 * Math.random());
                } while (document.getElementById(t));
                return t;
            }),
            (e.prototype.tip = function () {
                if (!this.$tip && ((this.$tip = t(this.options.template)), 1 != this.$tip.length)) throw new Error(this.type + " `template` option must consist of exactly 1 top-level element!");
                return this.$tip;
            }),
            (e.prototype.arrow = function () {
                return (this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow"));
            }),
            (e.prototype.enable = function () {
                this.enabled = !0;
            }),
            (e.prototype.disable = function () {
                this.enabled = !1;
            }),
            (e.prototype.toggleEnabled = function () {
                this.enabled = !this.enabled;
            }),
            (e.prototype.toggle = function (e) {
                var n = this;
                e && ((n = t(e.currentTarget).data("bs." + this.type)) || ((n = new this.constructor(e.currentTarget, this.getDelegateOptions())), t(e.currentTarget).data("bs." + this.type, n))),
                    e ? ((n.inState.click = !n.inState.click), n.isInStateTrue() ? n.enter(n) : n.leave(n)) : n.tip().hasClass("in") ? n.leave(n) : n.enter(n);
            }),
            (e.prototype.destroy = function () {
                var t = this;
                clearTimeout(this.timeout),
                    this.hide(function () {
                        t.$element.off("." + t.type).removeData("bs." + t.type), t.$tip && t.$tip.detach(), (t.$tip = null), (t.$arrow = null), (t.$viewport = null), (t.$element = null);
                    });
            });
        var n = t.fn.tooltip;
        (t.fn.tooltip = function (n) {
            return this.each(function () {
                var i = t(this),
                    s = i.data("bs.tooltip"),
                    o = "object" == typeof n && n;
                (!s && /destroy|hide/.test(n)) || (s || i.data("bs.tooltip", (s = new e(this, o))), "string" == typeof n && s[n]());
            });
        }),
            (t.fn.tooltip.Constructor = e),
            (t.fn.tooltip.noConflict = function () {
                return (t.fn.tooltip = n), this;
            });
    })(jQuery),
    (function (t) {
        "use strict";
        var e = function (t, e) {
            this.init("popover", t, e);
        };
        if (!t.fn.tooltip) throw new Error("Popover requires tooltip.js");
        (e.VERSION = "3.3.6"),
            (e.DEFAULTS = t.extend({}, t.fn.tooltip.Constructor.DEFAULTS, {
                placement: "right",
                trigger: "click",
                content: "",
                template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>',
            })),
            (e.prototype = t.extend({}, t.fn.tooltip.Constructor.prototype)),
            (e.prototype.constructor = e),
            (e.prototype.getDefaults = function () {
                return e.DEFAULTS;
            }),
            (e.prototype.setContent = function () {
                var t = this.tip(),
                    e = this.getTitle(),
                    n = this.getContent();
                t.find(".popover-title")[this.options.html ? "html" : "text"](e),
                    t.find(".popover-content").children().detach().end()[this.options.html ? ("string" == typeof n ? "html" : "append") : "text"](n),
                    t.removeClass("fade top bottom left right in"),
                    t.find(".popover-title").html() || t.find(".popover-title").hide();
            }),
            (e.prototype.hasContent = function () {
                return this.getTitle() || this.getContent();
            }),
            (e.prototype.getContent = function () {
                var t = this.$element,
                    e = this.options;
                return t.attr("data-content") || ("function" == typeof e.content ? e.content.call(t[0]) : e.content);
            }),
            (e.prototype.arrow = function () {
                return (this.$arrow = this.$arrow || this.tip().find(".arrow"));
            });
        var n = t.fn.popover;
        (t.fn.popover = function (n) {
            return this.each(function () {
                var i = t(this),
                    s = i.data("bs.popover"),
                    o = "object" == typeof n && n;
                (!s && /destroy|hide/.test(n)) || (s || i.data("bs.popover", (s = new e(this, o))), "string" == typeof n && s[n]());
            });
        }),
            (t.fn.popover.Constructor = e),
            (t.fn.popover.noConflict = function () {
                return (t.fn.popover = n), this;
            });
    })(jQuery),
    (function (t) {
        "use strict";
        function e(n, i) {
            (this.$body = t(document.body)),
                (this.$scrollElement = t(t(n).is(document.body) ? window : n)),
                (this.options = t.extend({}, e.DEFAULTS, i)),
                (this.selector = (this.options.target || "") + " .nav li > a"),
                (this.offsets = []),
                (this.targets = []),
                (this.activeTarget = null),
                (this.scrollHeight = 0),
                this.$scrollElement.on("scroll.bs.scrollspy", t.proxy(this.process, this)),
                this.refresh(),
                this.process();
        }
        function n(n) {
            return this.each(function () {
                var i = t(this),
                    s = i.data("bs.scrollspy"),
                    o = "object" == typeof n && n;
                s || i.data("bs.scrollspy", (s = new e(this, o))), "string" == typeof n && s[n]();
            });
        }
        (e.VERSION = "3.3.6"),
            (e.DEFAULTS = { offset: 10 }),
            (e.prototype.getScrollHeight = function () {
                return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight);
            }),
            (e.prototype.refresh = function () {
                var e = this,
                    n = "offset",
                    i = 0;
                (this.offsets = []),
                    (this.targets = []),
                    (this.scrollHeight = this.getScrollHeight()),
                    t.isWindow(this.$scrollElement[0]) || ((n = "position"), (i = this.$scrollElement.scrollTop())),
                    this.$body
                        .find(this.selector)
                        .map(function () {
                            var e = t(this),
                                s = e.data("target") || e.attr("href"),
                                o = /^#./.test(s) && t(s);
                            return (o && o.length && o.is(":visible") && [[o[n]().top + i, s]]) || null;
                        })
                        .sort(function (t, e) {
                            return t[0] - e[0];
                        })
                        .each(function () {
                            e.offsets.push(this[0]), e.targets.push(this[1]);
                        });
            }),
            (e.prototype.process = function () {
                var t,
                    e = this.$scrollElement.scrollTop() + this.options.offset,
                    n = this.getScrollHeight(),
                    i = this.options.offset + n - this.$scrollElement.height(),
                    s = this.offsets,
                    o = this.targets,
                    a = this.activeTarget;
                if ((this.scrollHeight != n && this.refresh(), e >= i)) return a != (t = o[o.length - 1]) && this.activate(t);
                if (a && e < s[0]) return (this.activeTarget = null), this.clear();
                for (t = s.length; t--; ) a != o[t] && e >= s[t] && (void 0 === s[t + 1] || e < s[t + 1]) && this.activate(o[t]);
            }),
            (e.prototype.activate = function (e) {
                (this.activeTarget = e), this.clear();
                var n = this.selector + '[data-target="' + e + '"],' + this.selector + '[href="' + e + '"]',
                    i = t(n).parents("li").addClass("active");
                i.parent(".dropdown-menu").length && (i = i.closest("li.dropdown").addClass("active")), i.trigger("activate.bs.scrollspy");
            }),
            (e.prototype.clear = function () {
                t(this.selector).parentsUntil(this.options.target, ".active").removeClass("active");
            });
        var i = t.fn.scrollspy;
        (t.fn.scrollspy = n),
            (t.fn.scrollspy.Constructor = e),
            (t.fn.scrollspy.noConflict = function () {
                return (t.fn.scrollspy = i), this;
            }),
            t(window).on("load.bs.scrollspy.data-api", function () {
                t('[data-spy="scroll"]').each(function () {
                    var e = t(this);
                    n.call(e, e.data());
                });
            });
    })(jQuery),
    (function (t) {
        "use strict";
        function e(e) {
            return this.each(function () {
                var i = t(this),
                    s = i.data("bs.tab");
                s || i.data("bs.tab", (s = new n(this))), "string" == typeof e && s[e]();
            });
        }
        var n = function (e) {
            this.element = t(e);
        };
        (n.VERSION = "3.3.6"),
            (n.TRANSITION_DURATION = 150),
            (n.prototype.show = function () {
                var e = this.element,
                    n = e.closest("ul:not(.dropdown-menu)"),
                    i = e.data("target");
                if ((i || ((i = e.attr("href")), (i = i && i.replace(/.*(?=#[^\s]*$)/, ""))), !e.parent("li").hasClass("active"))) {
                    var s = n.find(".active:last a"),
                        o = t.Event("hide.bs.tab", { relatedTarget: e[0] }),
                        a = t.Event("show.bs.tab", { relatedTarget: s[0] });
                    if ((s.trigger(o), e.trigger(a), !a.isDefaultPrevented() && !o.isDefaultPrevented())) {
                        var r = t(i);
                        this.activate(e.closest("li"), n),
                            this.activate(r, r.parent(), function () {
                                s.trigger({ type: "hidden.bs.tab", relatedTarget: e[0] }), e.trigger({ type: "shown.bs.tab", relatedTarget: s[0] });
                            });
                    }
                }
            }),
            (n.prototype.activate = function (e, i, s) {
                function o() {
                    a.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", !1),
                        e.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded", !0),
                        r ? (e[0].offsetWidth, e.addClass("in")) : e.removeClass("fade"),
                        e.parent(".dropdown-menu").length && e.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", !0),
                        s && s();
                }
                var a = i.find("> .active"),
                    r = s && t.support.transition && ((a.length && a.hasClass("fade")) || !!i.find("> .fade").length);
                a.length && r ? a.one("bsTransitionEnd", o).emulateTransitionEnd(n.TRANSITION_DURATION) : o(), a.removeClass("in");
            });
        var i = t.fn.tab;
        (t.fn.tab = e),
            (t.fn.tab.Constructor = n),
            (t.fn.tab.noConflict = function () {
                return (t.fn.tab = i), this;
            });
        var s = function (n) {
            n.preventDefault(), e.call(t(this), "show");
        };
        t(document).on("click.bs.tab.data-api", '[data-toggle="tab"]', s).on("click.bs.tab.data-api", '[data-toggle="pill"]', s);
    })(jQuery),
    (function (t) {
        "use strict";
        function e(e) {
            return this.each(function () {
                var i = t(this),
                    s = i.data("bs.affix"),
                    o = "object" == typeof e && e;
                s || i.data("bs.affix", (s = new n(this, o))), "string" == typeof e && s[e]();
            });
        }
        var n = function (e, i) {
            (this.options = t.extend({}, n.DEFAULTS, i)),
                (this.$target = t(this.options.target).on("scroll.bs.affix.data-api", t.proxy(this.checkPosition, this)).on("click.bs.affix.data-api", t.proxy(this.checkPositionWithEventLoop, this))),
                (this.$element = t(e)),
                (this.affixed = null),
                (this.unpin = null),
                (this.pinnedOffset = null),
                this.checkPosition();
        };
        (n.VERSION = "3.3.6"),
            (n.RESET = "affix affix-top affix-bottom"),
            (n.DEFAULTS = { offset: 0, target: window }),
            (n.prototype.getState = function (t, e, n, i) {
                var s = this.$target.scrollTop(),
                    o = this.$element.offset(),
                    a = this.$target.height();
                if (null != n && "top" == this.affixed) return s < n && "top";
                if ("bottom" == this.affixed) return null != n ? !(s + this.unpin <= o.top) && "bottom" : !(s + a <= t - i) && "bottom";
                var r = null == this.affixed,
                    l = r ? s : o.top,
                    d = r ? a : e;
                return null != n && s <= n ? "top" : null != i && l + d >= t - i && "bottom";
            }),
            (n.prototype.getPinnedOffset = function () {
                if (this.pinnedOffset) return this.pinnedOffset;
                this.$element.removeClass(n.RESET).addClass("affix");
                var t = this.$target.scrollTop(),
                    e = this.$element.offset();
                return (this.pinnedOffset = e.top - t);
            }),
            (n.prototype.checkPositionWithEventLoop = function () {
                setTimeout(t.proxy(this.checkPosition, this), 1);
            }),
            (n.prototype.checkPosition = function () {
                if (this.$element.is(":visible")) {
                    var e = this.$element.height(),
                        i = this.options.offset,
                        s = i.top,
                        o = i.bottom,
                        a = Math.max(t(document).height(), t(document.body).height());
                    "object" != typeof i && (o = s = i), "function" == typeof s && (s = i.top(this.$element)), "function" == typeof o && (o = i.bottom(this.$element));
                    var r = this.getState(a, e, s, o);
                    if (this.affixed != r) {
                        null != this.unpin && this.$element.css("top", "");
                        var l = "affix" + (r ? "-" + r : ""),
                            d = t.Event(l + ".bs.affix");
                        if ((this.$element.trigger(d), d.isDefaultPrevented())) return;
                        (this.affixed = r),
                            (this.unpin = "bottom" == r ? this.getPinnedOffset() : null),
                            this.$element
                                .removeClass(n.RESET)
                                .addClass(l)
                                .trigger(l.replace("affix", "affixed") + ".bs.affix");
                    }
                    "bottom" == r && this.$element.offset({ top: a - e - o });
                }
            });
        var i = t.fn.affix;
        (t.fn.affix = e),
            (t.fn.affix.Constructor = n),
            (t.fn.affix.noConflict = function () {
                return (t.fn.affix = i), this;
            }),
            t(window).on("load", function () {
                t('[data-spy="affix"]').each(function () {
                    var n = t(this),
                        i = n.data();
                    (i.offset = i.offset || {}), null != i.offsetBottom && (i.offset.bottom = i.offsetBottom), null != i.offsetTop && (i.offset.top = i.offsetTop), e.call(n, i);
                });
            });
    })(jQuery),
    (function (t) {
        "use strict";
        function e(e) {
			return !1; //DIRTY disable menu
            if (void 0 === e) return !1;
            var i = t(e);
            null != b ? n() : c.on("click", s), (b = t("#" + i.attr("data-submenu"))), i.addClass("heig-nav__link--active"), h.addClass("heig-nav--open heig-nav--variation");
            var o = b.outerHeight() > 240 ? b.outerHeight() : 240;
            f.css("max-height", o), b.addClass("in");
        }
        function n() {
            b.removeClass("in"), f.css("max-height", 0), p.removeClass("heig-nav__link--active");
        }
        function i() {
            !0 === h.hasClass("heig-nav--open") && (h.removeClass("heig-nav--open"), n(), (b = null), v && d.scrollTop() <= g && h.removeClass("heig-nav--variation"));
        }
        function s(t) {
            h.is(t.target) || 0 !== h.has(t.target).length || (c.off(t.type, s), i());
        }
        function o() {
            d.scrollTop() >= g ? a() : r();
        }
        function a() {
            h.addClass("heig-nav--variation").css({ position: "fixed", top: 0 });
        }
        function r() {
            h.removeClass("heig-nav--variation").css({ position: "absolute", top: g + "px" });
        }
        function l() {
            d.scrollTop() > 0 ? u.addClass("mobile-nav--variation") : u.removeClass("mobile-nav--variation");
        }
        var d = t(window),
            c = t(document),
            h = (t("body"), t(".heig-nav").first()),
            p = t(".heig-nav__link-parent"),
            u = t(".mobile-nav").first(),
            f = t(".heig-nav__submenus").first(),
            v = h.hasClass("heig-nav--sticky"),
            m = "ontouchstart" in window || navigator.maxTouchPoints,
            g = (h && h.offset() && h.offset().top) || 0,
            b = null,
            y = m ? "click" : "mouseenter",
            $ = { delay: 100 };
        h.after('<div class="heig-nav__overlay"></div>'),
            m && p.attr("href", "javascript:void(0)"),
            p.on(y, function (t) {
                if ((t.target.hasAttribute("data-submenu") || console.error("Parent links MUST have a data-submenu attribute."), m)) e(t.target);
                else {
                    var n = setTimeout(function () {
                        e(t.target);
                    }, $.delay);
                    this.onmouseout = function () {
                        clearTimeout(n);
                    };
                }
            }),
            d.on("scroll", i),
            h.on("mouseleave", i),
            m ||
                c.on("keydown", function (t) {
                    27 == (t = t || window.event).keyCode && i();
                }),
            v && ("undefined" != h.attr("data-offset") && (g = h.attr("data-offset")), h.css("top", g + "px"), d.on("scroll", o), o()),
            u && (d.on("scroll", l), l());
    })(jQuery),
    (function (t) {
        var e = (document.getElementsByClassName("superpicture")[0], document.getElementsByClassName("superpicture__content")[0]),
            n = { offset: e ? e.offsetTop - 100 : 0 };
        document.onscroll = function (t) {
            (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0) > n.offset ? e.classList.add("superpicture__content--fadeout") : e.classList.remove("superpicture__content--fadeout");
        };
    })(jQuery);
var myVideos = document.getElementsByClassName("js-video"),
    myYTVideos = [],
    isIOSDevice = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream,
    currentlyPlaying = null;
if (myVideos.length > 0) {
    var tag = document.createElement("script");
    tag.src = "https://www.youtube.com/iframe_api";
    var body = document.getElementsByTagName("body")[0];
    body.appendChild(tag), isIOSDevice && $(".video__poster").remove();
}
!(function (t) {
    function e() {
        t[n].glbl ||
            ((r = { $wndw: t(window), $docu: t(document), $html: t("html"), $body: t("body") }),
            (s = {}),
            (o = {}),
            (a = {}),
            t.each([s, o, a], function (t, e) {
                e.add = function (t) {
                    for (var n = 0, i = (t = t.split(" ")).length; i > n; n++) e[t[n]] = e.mm(t[n]);
                };
            }),
            (s.mm = function (t) {
                return "mm-" + t;
            }),
            s.add("wrapper menu panels panel nopanel current highest opened subopened navbar hasnavbar title btn prev next listview nolistview inset vertical selected divider spacer hidden fullsubopen"),
            (s.umm = function (t) {
                return "mm-" == t.slice(0, 3) && (t = t.slice(3)), t;
            }),
            (o.mm = function (t) {
                return "mm-" + t;
            }),
            o.add("parent sub"),
            (a.mm = function (t) {
                return t + ".mm";
            }),
            a.add("transitionend webkitTransitionEnd click scroll keydown mousedown mouseup touchstart touchmove touchend orientationchange"),
            (t[n]._c = s),
            (t[n]._d = o),
            (t[n]._e = a),
            (t[n].glbl = r));
    }
    var n = "mmenu",
        i = "5.6.4";
    if (!(t[n] && t[n].version > i)) {
        (t[n] = function (t, e, n) {
            (this.$menu = t),
                (this._api = ["bind", "init", "update", "setSelected", "getInstance", "openPanel", "closePanel", "closeAllPanels"]),
                (this.opts = e),
                (this.conf = n),
                (this.vars = {}),
                (this.cbck = {}),
                "function" == typeof this.___deprecated && this.___deprecated(),
                this._initMenu(),
                this._initAnchors();
            var i = this.$pnls.children();
            return this._initAddons(), this.init(i), "function" == typeof this.___debug && this.___debug(), this;
        }),
            (t[n].version = i),
            (t[n].addons = {}),
            (t[n].uniqueId = 0),
            (t[n].defaults = { extensions: [], navbar: { add: !0, title: "Menu", titleLink: "panel" }, onClick: { setSelected: !0 }, slidingSubmenus: !0 }),
            (t[n].configuration = {
                classNames: { divider: "Divider", inset: "Inset", panel: "Panel", selected: "Selected", spacer: "Spacer", vertical: "Vertical" },
                clone: !1,
                openingInterval: 25,
                panelNodetype: "ul, ol, div",
                transitionDuration: 400,
            }),
            (t[n].prototype = {
                init: function (t) {
                    (t = t.not("." + s.nopanel)), (t = this._initPanels(t)), this.trigger("init", t), this.trigger("update");
                },
                update: function () {
                    this.trigger("update");
                },
                setSelected: function (t) {
                    this.$menu
                        .find("." + s.listview)
                        .children()
                        .removeClass(s.selected),
                        t.addClass(s.selected),
                        this.trigger("setSelected", t);
                },
                openPanel: function (e) {
                    var i = e.parent(),
                        o = this;
                    if (i.hasClass(s.vertical)) {
                        var a = i.parents("." + s.subopened);
                        if (a.length) return void this.openPanel(a.first());
                        i.addClass(s.opened), this.trigger("openPanel", e), this.trigger("openingPanel", e), this.trigger("openedPanel", e);
                    } else {
                        if (e.hasClass(s.current)) return;
                        var r = this.$pnls.children("." + s.panel),
                            l = r.filter("." + s.current);
                        r
                            .removeClass(s.highest)
                            .removeClass(s.current)
                            .not(e)
                            .not(l)
                            .not("." + s.vertical)
                            .addClass(s.hidden),
                            t[n].support.csstransitions || l.addClass(s.hidden),
                            e.hasClass(s.opened)
                                ? e
                                      .nextAll("." + s.opened)
                                      .addClass(s.highest)
                                      .removeClass(s.opened)
                                      .removeClass(s.subopened)
                                : (e.addClass(s.highest), l.addClass(s.subopened)),
                            e.removeClass(s.hidden).addClass(s.current),
                            o.trigger("openPanel", e),
                            setTimeout(function () {
                                e.removeClass(s.subopened).addClass(s.opened),
                                    o.trigger("openingPanel", e),
                                    o.__transitionend(
                                        e,
                                        function () {
                                            o.trigger("openedPanel", e);
                                        },
                                        o.conf.transitionDuration
                                    );
                            }, this.conf.openingInterval);
                    }
                },
                closePanel: function (t) {
                    var e = t.parent();
                    e.hasClass(s.vertical) && (e.removeClass(s.opened), this.trigger("closePanel", t), this.trigger("closingPanel", t), this.trigger("closedPanel", t));
                },
                closeAllPanels: function () {
                    this.$menu
                        .find("." + s.listview)
                        .children()
                        .removeClass(s.selected)
                        .filter("." + s.vertical)
                        .removeClass(s.opened);
                    var t = this.$pnls.children("." + s.panel).first();
                    this.$pnls
                        .children("." + s.panel)
                        .not(t)
                        .removeClass(s.subopened)
                        .removeClass(s.opened)
                        .removeClass(s.current)
                        .removeClass(s.highest)
                        .addClass(s.hidden),
                        this.openPanel(t);
                },
                togglePanel: function (t) {
                    var e = t.parent();
                    e.hasClass(s.vertical) && this[e.hasClass(s.opened) ? "closePanel" : "openPanel"](t);
                },
                getInstance: function () {
                    return this;
                },
                bind: function (t, e) {
                    (this.cbck[t] = this.cbck[t] || []), this.cbck[t].push(e);
                },
                trigger: function () {
                    var t = this,
                        e = Array.prototype.slice.call(arguments),
                        n = e.shift();
                    if (this.cbck[n]) for (var i = 0, s = this.cbck[n].length; s > i; i++) this.cbck[n][i].apply(t, e);
                },
                _initMenu: function () {
                    this.$menu.attr("id", this.$menu.attr("id") || this.__getUniqueId()),
                        this.conf.clone &&
                            ((this.$menu = this.$menu.clone(!0)),
                            this.$menu
                                .add(this.$menu.find("[id]"))
                                .filter("[id]")
                                .each(function () {
                                    t(this).attr("id", s.mm(t(this).attr("id")));
                                })),
                        this.$menu.contents().each(function () {
                            3 == t(this)[0].nodeType && t(this).remove();
                        }),
                        (this.$pnls = t('<div class="' + s.panels + '" />')
                            .append(this.$menu.children(this.conf.panelNodetype))
                            .prependTo(this.$menu)),
                        this.$menu.parent().addClass(s.wrapper);
                    var e = [s.menu];
                    this.opts.slidingSubmenus || e.push(s.vertical),
                        (this.opts.extensions = this.opts.extensions.length ? "mm-" + this.opts.extensions.join(" mm-") : ""),
                        this.opts.extensions && e.push(this.opts.extensions),
                        this.$menu.addClass(e.join(" "));
                },
                _initPanels: function (e) {
                    var n = this,
                        i = this.__findAddBack(e, "ul, ol");
                    this.__refactorClass(i, this.conf.classNames.inset, "inset").addClass(s.nolistview + " " + s.nopanel), i.not("." + s.nolistview).addClass(s.listview);
                    var a = this.__findAddBack(e, "." + s.listview).children();
                    this.__refactorClass(a, this.conf.classNames.selected, "selected"),
                        this.__refactorClass(a, this.conf.classNames.divider, "divider"),
                        this.__refactorClass(a, this.conf.classNames.spacer, "spacer"),
                        this.__refactorClass(this.__findAddBack(e, "." + this.conf.classNames.panel), this.conf.classNames.panel, "panel");
                    var r = t(),
                        l = e
                            .add(e.find("." + s.panel))
                            .add(
                                this.__findAddBack(e, "." + s.listview)
                                    .children()
                                    .children(this.conf.panelNodetype)
                            )
                            .not("." + s.nopanel);
                    this.__refactorClass(l, this.conf.classNames.vertical, "vertical"),
                        this.opts.slidingSubmenus || l.addClass(s.vertical),
                        l.each(function () {
                            var e = t(this),
                                i = e;
                            e.is("ul, ol") ? (e.wrap('<div class="' + s.panel + '" />'), (i = e.parent())) : i.addClass(s.panel);
                            var o = e.attr("id");
                            e.removeAttr("id"), i.attr("id", o || n.__getUniqueId()), e.hasClass(s.vertical) && (e.removeClass(n.conf.classNames.vertical), i.add(i.parent()).addClass(s.vertical)), (r = r.add(i));
                        });
                    var d = t("." + s.panel, this.$menu);
                    r.each(function (e) {
                        var i,
                            a,
                            r = t(this),
                            l = r.parent(),
                            d = l.children("a, span").first();
                        if (
                            (l.is("." + s.panels) || (l.data(o.sub, r), r.data(o.parent, l)),
                            l.children("." + s.next).length ||
                                (l.parent().is("." + s.listview) && ((i = r.attr("id")), (a = t('<a class="' + s.next + '" href="#' + i + '" data-target="#' + i + '" />').insertBefore(d)), d.is("span") && a.addClass(s.fullsubopen))),
                            !r.children("." + s.navbar).length && !l.hasClass(s.vertical))
                        ) {
                            l.parent().is("." + s.listview)
                                ? (l = l.closest("." + s.panel))
                                : ((d = l
                                      .closest("." + s.panel)
                                      .find('a[href="#' + r.attr("id") + '"]')
                                      .first()),
                                  (l = d.closest("." + s.panel)));
                            var c = !1,
                                h = t('<div class="' + s.navbar + '" />');
                            if ((n.opts.navbar.add && r.addClass(s.hasnavbar), l.length)) {
                                switch (((i = l.attr("id")), n.opts.navbar.titleLink)) {
                                    case "anchor":
                                        c = d.attr("href");
                                        break;
                                    case "panel":
                                    case "parent":
                                        c = "#" + i;
                                        break;
                                    default:
                                        c = !1;
                                }
                                h.append('<a class="' + s.btn + " " + s.prev + '" href="#' + i + '" data-target="#' + i + '" />')
                                    .append(t('<a class="' + s.title + '"' + (c ? ' href="' + c + '"' : "") + " />").text(d.text()))
                                    .prependTo(r);
                            } else n.opts.navbar.title && h.append('<a class="' + s.title + '">' + n.opts.navbar.title + "</a>").prependTo(r);
                        }
                    });
                    var c = this.__findAddBack(e, "." + s.listview)
                        .children("." + s.selected)
                        .removeClass(s.selected)
                        .last()
                        .addClass(s.selected);
                    c
                        .add(c.parentsUntil("." + s.menu, "li"))
                        .filter("." + s.vertical)
                        .addClass(s.opened)
                        .end()
                        .each(function () {
                            t(this)
                                .parentsUntil("." + s.menu, "." + s.panel)
                                .not("." + s.vertical)
                                .first()
                                .addClass(s.opened)
                                .parentsUntil("." + s.menu, "." + s.panel)
                                .not("." + s.vertical)
                                .first()
                                .addClass(s.opened)
                                .addClass(s.subopened);
                        }),
                        c
                            .children("." + s.panel)
                            .not("." + s.vertical)
                            .addClass(s.opened)
                            .parentsUntil("." + s.menu, "." + s.panel)
                            .not("." + s.vertical)
                            .first()
                            .addClass(s.opened)
                            .addClass(s.subopened);
                    var h = d.filter("." + s.opened);
                    return (
                        h.length || (h = r.first()),
                        h.addClass(s.opened).last().addClass(s.current),
                        r
                            .not("." + s.vertical)
                            .not(h.last())
                            .addClass(s.hidden)
                            .end()
                            .filter(function () {
                                return !t(this).parent().hasClass(s.panels);
                            })
                            .appendTo(this.$pnls),
                        r
                    );
                },
                _initAnchors: function () {
                    var e = this;
                    r.$body.on(a.click + "-oncanvas", "a[href]", function (i) {
                        var o = t(this),
                            a = !1,
                            r = e.$menu.find(o).length;
                        for (var l in t[n].addons)
                            if (t[n].addons[l].clickAnchor.call(e, o, r)) {
                                a = !0;
                                break;
                            }
                        var d = o.attr("href");
                        if (!a && r && d.length > 1 && "#" == d.slice(0, 1))
                            try {
                                var c = t(d, e.$menu);
                                c.is("." + s.panel) && ((a = !0), e[o.parent().hasClass(s.vertical) ? "togglePanel" : "openPanel"](c));
                            } catch (t) {}
                        if ((a && i.preventDefault(), !a && r && o.is("." + s.listview + " > li > a") && !o.is('[rel="external"]') && !o.is('[target="_blank"]'))) {
                            e.__valueOrFn(e.opts.onClick.setSelected, o) && e.setSelected(t(i.target).parent());
                            var h = e.__valueOrFn(e.opts.onClick.preventDefault, o, "#" == d.slice(0, 1));
                            h && i.preventDefault(), e.__valueOrFn(e.opts.onClick.close, o, h) && e.close();
                        }
                    });
                },
                _initAddons: function () {
                    var e;
                    for (e in t[n].addons) t[n].addons[e].add.call(this), (t[n].addons[e].add = function () {});
                    for (e in t[n].addons) t[n].addons[e].setup.call(this);
                },
                _getOriginalMenuId: function () {
                    var t = this.$menu.attr("id");
                    return t && t.length && this.conf.clone && (t = s.umm(t)), t;
                },
                __api: function () {
                    var e = this,
                        n = {};
                    return (
                        t.each(this._api, function (t) {
                            var i = this;
                            n[i] = function () {
                                var t = e[i].apply(e, arguments);
                                return void 0 === t ? n : t;
                            };
                        }),
                        n
                    );
                },
                __valueOrFn: function (t, e, n) {
                    return "function" == typeof t ? t.call(e[0]) : void 0 === t && void 0 !== n ? n : t;
                },
                __refactorClass: function (t, e, n) {
                    return t
                        .filter("." + e)
                        .removeClass(e)
                        .addClass(s[n]);
                },
                __findAddBack: function (t, e) {
                    return t.find(e).add(t.filter(e));
                },
                __filterListItems: function (t) {
                    return t.not("." + s.divider).not("." + s.hidden);
                },
                __transitionend: function (t, e, n) {
                    var i = !1,
                        s = function () {
                            i || e.call(t[0]), (i = !0);
                        };
                    t.one(a.transitionend, s), t.one(a.webkitTransitionEnd, s), setTimeout(s, 1.1 * n);
                },
                __getUniqueId: function () {
                    return s.mm(t[n].uniqueId++);
                },
            }),
            (t.fn[n] = function (i, s) {
                return (
                    e(),
                    (i = t.extend(!0, {}, t[n].defaults, i)),
                    (s = t.extend(!0, {}, t[n].configuration, s)),
                    this.each(function () {
                        var e = t(this);
                        if (!e.data(n)) {
                            var o = new t[n](e, i, s);
                            o.$menu.data(n, o.__api());
                        }
                    })
                );
            }),
            (t[n].support = {
                touch: "ontouchstart" in window || navigator.msMaxTouchPoints || !1,
                csstransitions: (function () {
                    if ("undefined" != typeof Modernizr && void 0 !== Modernizr.csstransitions) return Modernizr.csstransitions;
                    var t = (document.body || document.documentElement).style,
                        e = "transition";
                    if ("string" == typeof t[e]) return !0;
                    var n = ["Moz", "webkit", "Webkit", "Khtml", "O", "ms"];
                    e = e.charAt(0).toUpperCase() + e.substr(1);
                    for (var i = 0; i < n.length; i++) if ("string" == typeof t[n[i] + e]) return !0;
                    return !1;
                })(),
            });
        var s, o, a, r;
    }
})(jQuery),
    (function (t) {
        var e = "mmenu",
            n = "offCanvas";
        (t[e].addons[n] = {
            setup: function () {
                if (this.opts[n]) {
                    var s = this.opts[n],
                        o = this.conf[n];
                    (a = t[e].glbl),
                        (this._api = t.merge(this._api, ["open", "close", "setPage"])),
                        ("top" == s.position || "bottom" == s.position) && (s.zposition = "front"),
                        "string" != typeof o.pageSelector && (o.pageSelector = "> " + o.pageNodetype),
                        (a.$allMenus = (a.$allMenus || t()).add(this.$menu)),
                        (this.vars.opened = !1);
                    var r = [i.offcanvas];
                    "left" != s.position && r.push(i.mm(s.position)),
                        "back" != s.zposition && r.push(i.mm(s.zposition)),
                        this.$menu.addClass(r.join(" ")).parent().removeClass(i.wrapper),
                        this.setPage(a.$page),
                        this._initBlocker(),
                        this["_initWindow_" + n](),
                        this.$menu[o.menuInjectMethod + "To"](o.menuWrapperSelector);
                    var l = window.location.hash;
                    if (l) {
                        var d = this._getOriginalMenuId();
                        d && d == l.slice(1) && this.open();
                    }
                }
            },
            add: function () {
                (i = t[e]._c), (s = t[e]._d), (o = t[e]._e), i.add("offcanvas slideout blocking modal background opening blocker page"), s.add("style"), o.add("resize");
            },
            clickAnchor: function (t, e) {
                if (!this.opts[n]) return !1;
                var i = this._getOriginalMenuId();
                return i && t.is('[href="#' + i + '"]') ? (this.open(), !0) : a.$page ? !(!(i = a.$page.first().attr("id")) || !t.is('[href="#' + i + '"]') || (this.close(), 0)) : void 0;
            },
        }),
            (t[e].defaults[n] = { position: "left", zposition: "back", blockUI: !0, moveBackground: !0 }),
            (t[e].configuration[n] = { pageNodetype: "div", pageSelector: null, noPageSelector: [], wrapPageIfNeeded: !0, menuWrapperSelector: "body", menuInjectMethod: "prepend" }),
            (t[e].prototype.open = function () {
                if (!this.vars.opened) {
                    var t = this;
                    this._openSetup(),
                        setTimeout(function () {
                            t._openFinish();
                        }, this.conf.openingInterval),
                        this.trigger("open");
                }
            }),
            (t[e].prototype._openSetup = function () {
                var e = this,
                    r = this.opts[n];
                this.closeAllOthers(),
                    a.$page.each(function () {
                        t(this).data(s.style, t(this).attr("style") || "");
                    }),
                    a.$wndw.trigger(o.resize + "-" + n, [!0]);
                var l = [i.opened];
                r.blockUI && l.push(i.blocking),
                    "modal" == r.blockUI && l.push(i.modal),
                    r.moveBackground && l.push(i.background),
                    "left" != r.position && l.push(i.mm(this.opts[n].position)),
                    "back" != r.zposition && l.push(i.mm(this.opts[n].zposition)),
                    this.opts.extensions && l.push(this.opts.extensions),
                    a.$html.addClass(l.join(" ")),
                    setTimeout(function () {
                        e.vars.opened = !0;
                    }, this.conf.openingInterval),
                    this.$menu.addClass(i.current + " " + i.opened);
            }),
            (t[e].prototype._openFinish = function () {
                var t = this;
                this.__transitionend(
                    a.$page.first(),
                    function () {
                        t.trigger("opened");
                    },
                    this.conf.transitionDuration
                ),
                    a.$html.addClass(i.opening),
                    this.trigger("opening");
            }),
            (t[e].prototype.close = function () {
                if (this.vars.opened) {
                    var e = this;
                    this.__transitionend(
                        a.$page.first(),
                        function () {
                            e.$menu.removeClass(i.current).removeClass(i.opened),
                                a.$html.removeClass(i.opened).removeClass(i.blocking).removeClass(i.modal).removeClass(i.background).removeClass(i.mm(e.opts[n].position)).removeClass(i.mm(e.opts[n].zposition)),
                                e.opts.extensions && a.$html.removeClass(e.opts.extensions),
                                a.$page.each(function () {
                                    t(this).attr("style", t(this).data(s.style));
                                }),
                                (e.vars.opened = !1),
                                e.trigger("closed");
                        },
                        this.conf.transitionDuration
                    ),
                        a.$html.removeClass(i.opening),
                        this.trigger("close"),
                        this.trigger("closing");
                }
            }),
            (t[e].prototype.closeAllOthers = function () {
                a.$allMenus.not(this.$menu).each(function () {
                    var n = t(this).data(e);
                    n && n.close && n.close();
                });
            }),
            (t[e].prototype.setPage = function (e) {
                var s = this,
                    o = this.conf[n];
                (e && e.length) ||
                    ((e = a.$body.find(o.pageSelector)), o.noPageSelector.length && (e = e.not(o.noPageSelector.join(", "))), e.length > 1 && o.wrapPageIfNeeded && (e = e.wrapAll("<" + this.conf[n].pageNodetype + " />").parent())),
                    e.each(function () {
                        t(this).attr("id", t(this).attr("id") || s.__getUniqueId());
                    }),
                    e.addClass(i.page + " " + i.slideout),
                    (a.$page = e),
                    this.trigger("setPage", e);
            }),
            (t[e].prototype["_initWindow_" + n] = function () {
                a.$wndw.off(o.keydown + "-" + n).on(o.keydown + "-" + n, function (t) {
                    return a.$html.hasClass(i.opened) && 9 == t.keyCode ? (t.preventDefault(), !1) : void 0;
                });
                var t = 0;
                a.$wndw.off(o.resize + "-" + n).on(o.resize + "-" + n, function (e, n) {
                    if (1 == a.$page.length && (n || a.$html.hasClass(i.opened))) {
                        var s = a.$wndw.height();
                        (n || s != t) && ((t = s), a.$page.css("minHeight", s));
                    }
                });
            }),
            (t[e].prototype._initBlocker = function () {
                var e = this;
                this.opts[n].blockUI &&
                    (a.$blck || (a.$blck = t('<div id="' + i.blocker + '" class="' + i.slideout + '" />')),
                    a.$blck
                        .appendTo(a.$body)
                        .off(o.touchstart + "-" + n + " " + o.touchmove + "-" + n)
                        .on(o.touchstart + "-" + n + " " + o.touchmove + "-" + n, function (t) {
                            t.preventDefault(), t.stopPropagation(), a.$blck.trigger(o.mousedown + "-" + n);
                        })
                        .off(o.mousedown + "-" + n)
                        .on(o.mousedown + "-" + n, function (t) {
                            t.preventDefault(), a.$html.hasClass(i.modal) || (e.closeAllOthers(), e.close());
                        }));
            });
        var i, s, o, a;
    })(jQuery),
    (function (t) {
        var e = "mmenu",
            n = "scrollBugFix";
        (t[e].addons[n] = {
            setup: function () {
                var s = this,
                    r = this.opts[n];
                if (
                    (this.conf[n],
                    (a = t[e].glbl),
                    t[e].support.touch && this.opts.offCanvas && this.opts.offCanvas.blockUI && ("boolean" == typeof r && (r = { fix: r }), "object" != typeof r && (r = {}), (r = this.opts[n] = t.extend(!0, {}, t[e].defaults[n], r)).fix))
                ) {
                    var l = this.$menu.attr("id"),
                        d = !1;
                    this.bind("opening", function () {
                        this.$pnls.children("." + i.current).scrollTop(0);
                    }),
                        a.$docu.on(o.touchmove, function (t) {
                            s.vars.opened && t.preventDefault();
                        }),
                        a.$body
                            .on(o.touchstart, "#" + l + "> ." + i.panels + "> ." + i.current, function (t) {
                                s.vars.opened &&
                                    (d ||
                                        ((d = !0),
                                        0 === t.currentTarget.scrollTop ? (t.currentTarget.scrollTop = 1) : t.currentTarget.scrollHeight === t.currentTarget.scrollTop + t.currentTarget.offsetHeight && (t.currentTarget.scrollTop -= 1),
                                        (d = !1)));
                            })
                            .on(o.touchmove, "#" + l + "> ." + i.panels + "> ." + i.current, function (e) {
                                s.vars.opened && t(this)[0].scrollHeight > t(this).innerHeight() && e.stopPropagation();
                            }),
                        a.$wndw.on(o.orientationchange, function () {
                            s.$pnls
                                .children("." + i.current)
                                .scrollTop(0)
                                .css({ "-webkit-overflow-scrolling": "auto" })
                                .css({ "-webkit-overflow-scrolling": "touch" });
                        });
                }
            },
            add: function () {
                (i = t[e]._c), (s = t[e]._d), (o = t[e]._e);
            },
            clickAnchor: function (t, e) {},
        }),
            (t[e].defaults[n] = { fix: !0 });
        var i, s, o, a;
    })(jQuery),
    (function (t) {
        var e = "mmenu",
            n = "autoHeight";
        (t[e].addons[n] = {
            setup: function () {
                if (this.opts.offCanvas) {
                    var s = this.opts[n];
                    if (
                        (this.conf[n],
                        (a = t[e].glbl),
                        "boolean" == typeof s && s && (s = { height: "auto" }),
                        "string" == typeof s && (s = { height: s }),
                        "object" != typeof s && (s = {}),
                        "auto" == (s = this.opts[n] = t.extend(!0, {}, t[e].defaults[n], s)).height || "highest" == s.height)
                    ) {
                        this.$menu.addClass(i.autoheight);
                        var o = function (e) {
                            if (this.vars.opened) {
                                var n = parseInt(this.$pnls.css("top"), 10) || 0,
                                    o = parseInt(this.$pnls.css("bottom"), 10) || 0,
                                    a = 0;
                                this.$menu.addClass(i.measureheight),
                                    "auto" == s.height
                                        ? ((e = e || this.$pnls.children("." + i.current)).is("." + i.vertical) &&
                                              (e = e
                                                  .parents("." + i.panel)
                                                  .not("." + i.vertical)
                                                  .first()),
                                          (a = e.outerHeight()))
                                        : "highest" == s.height &&
                                          this.$pnls.children().each(function () {
                                              var e = t(this);
                                              e.is("." + i.vertical) &&
                                                  (e = e
                                                      .parents("." + i.panel)
                                                      .not("." + i.vertical)
                                                      .first()),
                                                  (a = Math.max(a, e.outerHeight()));
                                          }),
                                    this.$menu.height(a + n + o).removeClass(i.measureheight);
                            }
                        };
                        this.bind("opening", o), "highest" == s.height && this.bind("init", o), "auto" == s.height && (this.bind("update", o), this.bind("openPanel", o), this.bind("closePanel", o));
                    }
                }
            },
            add: function () {
                (i = t[e]._c), (s = t[e]._d), (o = t[e]._e), i.add("autoheight measureheight"), o.add("resize");
            },
            clickAnchor: function (t, e) {},
        }),
            (t[e].defaults[n] = { height: "default" });
        var i, s, o, a;
    })(jQuery),
    (function (t) {
        var e = "mmenu",
            n = "backButton";
        (t[e].addons[n] = {
            setup: function () {
                if (this.opts.offCanvas) {
                    var s = this,
                        o = this.opts[n];
                    if ((this.conf[n], (a = t[e].glbl), "boolean" == typeof o && (o = { close: o }), "object" != typeof o && (o = {}), (o = t.extend(!0, {}, t[e].defaults[n], o)).close)) {
                        var r = "#" + s.$menu.attr("id");
                        this.bind("opened", function (t) {
                            location.hash != r && history.pushState(null, document.title, r);
                        }),
                            t(window).on("popstate", function (t) {
                                a.$html.hasClass(i.opened) ? (t.stopPropagation(), s.close()) : location.hash == r && (t.stopPropagation(), s.open());
                            });
                    }
                }
            },
            add: function () {
                return window.history && window.history.pushState ? ((i = t[e]._c), (s = t[e]._d), void (o = t[e]._e)) : void (t[e].addons[n].setup = function () {});
            },
            clickAnchor: function (t, e) {},
        }),
            (t[e].defaults[n] = { close: !1 });
        var i, s, o, a;
    })(jQuery),
    (function (t) {
        var e = "mmenu",
            n = "columns";
        (t[e].addons[n] = {
            setup: function () {
                var s = this.opts[n];
                if (
                    (this.conf[n],
                    (a = t[e].glbl),
                    "boolean" == typeof s && (s = { add: s }),
                    "number" == typeof s && (s = { add: !0, visible: s }),
                    "object" != typeof s && (s = {}),
                    "number" == typeof s.visible && (s.visible = { min: s.visible, max: s.visible }),
                    (s = this.opts[n] = t.extend(!0, {}, t[e].defaults[n], s)).add)
                ) {
                    (s.visible.min = Math.max(1, Math.min(6, s.visible.min))), (s.visible.max = Math.max(s.visible.min, Math.min(6, s.visible.max))), this.$menu.addClass(i.columns);
                    for (var o = this.opts.offCanvas ? this.$menu.add(a.$html) : this.$menu, r = [], l = 0; l <= s.visible.max; l++) r.push(i.columns + "-" + l);
                    r = r.join(" ");
                    var d = function () {
                            var t = this.$pnls.children("." + i.panel).filter("." + i.opened).length;
                            (t = Math.min(s.visible.max, Math.max(s.visible.min, t))), o.removeClass(r).addClass(i.columns + "-" + t);
                        },
                        c = function (e) {
                            this.$pnls
                                .children("." + i.panel)
                                .removeClass(r)
                                .filter("." + i.subopened)
                                .removeClass(i.hidden)
                                .add(e)
                                .slice(-s.visible.max)
                                .each(function (e) {
                                    t(this).addClass(i.columns + "-" + e);
                                });
                        };
                    this.bind("open", d),
                        this.bind("close", function () {
                            this.opts.offCanvas && a.$html.removeClass(r);
                        }),
                        this.bind("init", function (t) {
                            c.call(this, this.$pnls.children("." + i.current)), s.hideNavbars && t.removeClass(i.hasnavbar);
                        }),
                        this.bind("openPanel", c),
                        this.bind("openingPanel", d),
                        this.bind("openedPanel", d),
                        this.opts.offCanvas || d.call(this);
                }
            },
            add: function () {
                (i = t[e]._c), (s = t[e]._d), (o = t[e]._e), i.add("columns");
            },
            clickAnchor: function (e, s) {
                if (!this.opts[n].add) return !1;
                if (s) {
                    var o = e.attr("href");
                    if (o.length > 1 && "#" == o.slice(0, 1))
                        try {
                            if (t(o, this.$menu).is("." + i.panel))
                                for (
                                    var a =
                                        parseInt(
                                            e
                                                .closest("." + i.panel)
                                                .attr("class")
                                                .split(i.columns + "-")[1]
                                                .split(" ")[0],
                                            10
                                        ) + 1;
                                    !1 !== a;

                                ) {
                                    var r = this.$pnls.children("." + i.columns + "-" + a);
                                    if (!r.length) {
                                        a = !1;
                                        break;
                                    }
                                    a++, r.removeClass(i.subopened).removeClass(i.opened).removeClass(i.current).removeClass(i.highest).addClass(i.hidden);
                                }
                        } catch (t) {}
                }
            },
        }),
            (t[e].defaults[n] = { add: !1, visible: { min: 1, max: 3 }, hideNavbars: !1 });
        var i, s, o, a;
    })(jQuery),
    (function (t) {
        var e = "mmenu",
            n = "counters";
        (t[e].addons[n] = {
            setup: function () {
                var o = this,
                    r = this.opts[n];
                this.conf[n],
                    (a = t[e].glbl),
                    "boolean" == typeof r && (r = { add: r, update: r }),
                    "object" != typeof r && (r = {}),
                    (r = this.opts[n] = t.extend(!0, {}, t[e].defaults[n], r)),
                    this.bind("init", function (e) {
                        this.__refactorClass(t("em", e), this.conf.classNames[n].counter, "counter");
                    }),
                    r.add &&
                        this.bind("init", function (e) {
                            var n;
                            switch (r.addTo) {
                                case "panels":
                                    n = e;
                                    break;
                                default:
                                    n = e.filter(r.addTo);
                            }
                            n.each(function () {
                                var e = t(this).data(s.parent);
                                e && (e.children("em." + i.counter).length || e.prepend(t('<em class="' + i.counter + '" />')));
                            });
                        }),
                    r.update &&
                        this.bind("update", function () {
                            this.$pnls.children("." + i.panel).each(function () {
                                var e = t(this),
                                    n = e.data(s.parent);
                                if (n) {
                                    var a = n.children("em." + i.counter);
                                    a.length && (e = e.children("." + i.listview)).length && a.html(o.__filterListItems(e.children()).length);
                                }
                            });
                        });
            },
            add: function () {
                (i = t[e]._c), (s = t[e]._d), (o = t[e]._e), i.add("counter search noresultsmsg");
            },
            clickAnchor: function (t, e) {},
        }),
            (t[e].defaults[n] = { add: !1, addTo: "panels", update: !1 }),
            (t[e].configuration.classNames[n] = { counter: "Counter" });
        var i, s, o, a;
    })(jQuery),
    (function (t) {
        var e = "mmenu",
            n = "dividers";
        (t[e].addons[n] = {
            setup: function () {
                var s = this,
                    r = this.opts[n];
                if (
                    (this.conf[n],
                    (a = t[e].glbl),
                    "boolean" == typeof r && (r = { add: r, fixed: r }),
                    "object" != typeof r && (r = {}),
                    (r = this.opts[n] = t.extend(!0, {}, t[e].defaults[n], r)),
                    this.bind("init", function (e) {
                        this.__refactorClass(t("li", this.$menu), this.conf.classNames[n].collapsed, "collapsed");
                    }),
                    r.add &&
                        this.bind("init", function (e) {
                            var n;
                            switch (r.addTo) {
                                case "panels":
                                    n = e;
                                    break;
                                default:
                                    n = e.filter(r.addTo);
                            }
                            t("." + i.divider, n).remove(),
                                n
                                    .find("." + i.listview)
                                    .not("." + i.vertical)
                                    .each(function () {
                                        var e = "";
                                        s.__filterListItems(t(this).children()).each(function () {
                                            var n = t.trim(t(this).children("a, span").text()).slice(0, 1).toLowerCase();
                                            n != e && n.length && ((e = n), t('<li class="' + i.divider + '">' + n + "</li>").insertBefore(this));
                                        });
                                    });
                        }),
                    r.collapse &&
                        this.bind("init", function (e) {
                            t("." + i.divider, e).each(function () {
                                var e = t(this);
                                e.nextUntil("." + i.divider, "." + i.collapsed).length && (e.children("." + i.subopen).length || (e.wrapInner("<span />"), e.prepend('<a href="#" class="' + i.subopen + " " + i.fullsubopen + '" />')));
                            });
                        }),
                    r.fixed)
                ) {
                    var l = function (e) {
                        if ((e = e || this.$pnls.children("." + i.current)).find("." + i.divider).not("." + i.hidden).length) {
                            this.$menu.addClass(i.hasdividers);
                            var n = e.scrollTop() || 0,
                                s = "";
                            e.is(":visible") &&
                                e
                                    .find("." + i.divider)
                                    .not("." + i.hidden)
                                    .each(function () {
                                        t(this).position().top + n < n + 1 && (s = t(this).text());
                                    }),
                                this.$fixeddivider.text(s);
                        } else this.$menu.removeClass(i.hasdividers);
                    };
                    (this.$fixeddivider = t('<ul class="' + i.listview + " " + i.fixeddivider + '"><li class="' + i.divider + '"></li></ul>')
                        .prependTo(this.$pnls)
                        .children()),
                        this.bind("openPanel", l),
                        this.bind("update", l),
                        this.bind("init", function (e) {
                            e.off(o.scroll + "-dividers " + o.touchmove + "-dividers").on(o.scroll + "-dividers " + o.touchmove + "-dividers", function (e) {
                                l.call(s, t(this));
                            });
                        });
                }
            },
            add: function () {
                (i = t[e]._c), (s = t[e]._d), (o = t[e]._e), i.add("collapsed uncollapsed fixeddivider hasdividers"), o.add("scroll");
            },
            clickAnchor: function (t, e) {
                if (this.opts[n].collapse && e) {
                    var s = t.parent();
                    if (s.is("." + i.divider)) {
                        var o = s.nextUntil("." + i.divider, "." + i.collapsed);
                        return s.toggleClass(i.opened), o[s.hasClass(i.opened) ? "addClass" : "removeClass"](i.uncollapsed), !0;
                    }
                }
                return !1;
            },
        }),
            (t[e].defaults[n] = { add: !1, addTo: "panels", fixed: !1, collapse: !1 }),
            (t[e].configuration.classNames[n] = { collapsed: "Collapsed" });
        var i, s, o, a;
    })(jQuery),
    (function (t) {
        function e(t, e, n) {
            return e > t && (t = e), t > n && (t = n), t;
        }
        var n = "mmenu",
            i = "dragOpen";
        (t[n].addons[i] = {
            setup: function () {
                if (this.opts.offCanvas) {
                    var o = this,
                        a = this.opts[i],
                        l = this.conf[i];
                    if (((r = t[n].glbl), "boolean" == typeof a && (a = { open: a }), "object" != typeof a && (a = {}), (a = this.opts[i] = t.extend(!0, {}, t[n].defaults[i], a)).open)) {
                        var d,
                            c,
                            h,
                            p,
                            u,
                            f = {},
                            v = 0,
                            m = !1,
                            g = !1,
                            b = 0,
                            y = 0;
                        switch (this.opts.offCanvas.position) {
                            case "left":
                            case "right":
                                (f.events = "panleft panright"), (f.typeLower = "x"), (f.typeUpper = "X"), (g = "width");
                                break;
                            case "top":
                            case "bottom":
                                (f.events = "panup pandown"), (f.typeLower = "y"), (f.typeUpper = "Y"), (g = "height");
                        }
                        switch (this.opts.offCanvas.position) {
                            case "right":
                            case "bottom":
                                (f.negative = !0),
                                    (p = function (t) {
                                        t >= r.$wndw[g]() - a.maxStartPos && (v = 1);
                                    });
                                break;
                            default:
                                (f.negative = !1),
                                    (p = function (t) {
                                        t <= a.maxStartPos && (v = 1);
                                    });
                        }
                        switch (this.opts.offCanvas.position) {
                            case "left":
                                (f.open_dir = "right"), (f.close_dir = "left");
                                break;
                            case "right":
                                (f.open_dir = "left"), (f.close_dir = "right");
                                break;
                            case "top":
                                (f.open_dir = "down"), (f.close_dir = "up");
                                break;
                            case "bottom":
                                (f.open_dir = "up"), (f.close_dir = "down");
                        }
                        switch (this.opts.offCanvas.zposition) {
                            case "front":
                                u = function () {
                                    return this.$menu;
                                };
                                break;
                            default:
                                u = function () {
                                    return t("." + s.slideout);
                                };
                        }
                        var $ = this.__valueOrFn(a.pageNode, this.$menu, r.$page);
                        "string" == typeof $ && ($ = t($)),
                            new Hammer($[0], a.vendors.hammer)
                                .on("panstart", function (t) {
                                    p(t.center[f.typeLower]), (r.$slideOutNodes = u()), (m = f.open_dir);
                                })
                                .on(f.events + " panend", function (t) {
                                    v > 0 && t.preventDefault();
                                })
                                .on(f.events, function (t) {
                                    if (((d = t["delta" + f.typeUpper]), f.negative && (d = -d), d != b && (m = d >= b ? f.open_dir : f.close_dir), (b = d) > a.threshold && 1 == v)) {
                                        if (r.$html.hasClass(s.opened)) return;
                                        (v = 2), o._openSetup(), o.trigger("opening"), r.$html.addClass(s.dragging), (y = e(r.$wndw[g]() * l[g].perc, l[g].min, l[g].max));
                                    }
                                    2 == v &&
                                        ((c = e(b, 10, y) - ("front" == o.opts.offCanvas.zposition ? y : 0)),
                                        f.negative && (c = -c),
                                        (h = "translate" + f.typeUpper + "(" + c + "px )"),
                                        r.$slideOutNodes.css({ "-webkit-transform": "-webkit-" + h, transform: h }));
                                })
                                .on("panend", function (t) {
                                    2 == v && (r.$html.removeClass(s.dragging), r.$slideOutNodes.css("transform", ""), o[m == f.open_dir ? "_openFinish" : "close"]()), (v = 0);
                                });
                    }
                }
            },
            add: function () {
                return "function" != typeof Hammer || Hammer.VERSION < 2 ? void (t[n].addons[i].setup = function () {}) : ((s = t[n]._c), (o = t[n]._d), (a = t[n]._e), void s.add("dragging"));
            },
            clickAnchor: function (t, e) {},
        }),
            (t[n].defaults[i] = { open: !1, maxStartPos: 100, threshold: 50, vendors: { hammer: {} } }),
            (t[n].configuration[i] = { width: { perc: 0.8, min: 140, max: 440 }, height: { perc: 0.8, min: 140, max: 880 } });
        var s, o, a, r;
    })(jQuery),
    (function (t) {
        var e = "mmenu",
            n = "dropdown";
        (t[e].addons[n] = {
            setup: function () {
                if (this.opts.offCanvas) {
                    var r = this,
                        l = this.opts[n],
                        d = this.conf[n];
                    if (
                        ((a = t[e].glbl),
                        "boolean" == typeof l && l && (l = { drop: l }),
                        "object" != typeof l && (l = {}),
                        "string" == typeof l.position && (l.position = { of: l.position }),
                        (l = this.opts[n] = t.extend(!0, {}, t[e].defaults[n], l)).drop)
                    ) {
                        if ("string" != typeof l.position.of) {
                            var c = this.$menu.attr("id");
                            c && c.length && (this.conf.clone && (c = i.umm(c)), (l.position.of = '[href="#' + c + '"]'));
                        }
                        if ("string" == typeof l.position.of) {
                            var h = t(l.position.of);
                            if (h.length) {
                                this.$menu.addClass(i.dropdown),
                                    l.tip && this.$menu.addClass(i.tip),
                                    (l.event = l.event.split(" ")),
                                    1 == l.event.length && (l.event[1] = l.event[0]),
                                    "hover" == l.event[0] &&
                                        h.on(o.mouseenter + "-dropdown", function () {
                                            r.open();
                                        }),
                                    "hover" == l.event[1] &&
                                        this.$menu.on(o.mouseleave + "-dropdown", function () {
                                            r.close();
                                        }),
                                    this.bind("opening", function () {
                                        this.$menu.data(s.style, this.$menu.attr("style") || ""), a.$html.addClass(i.dropdown);
                                    }),
                                    this.bind("closed", function () {
                                        this.$menu.attr("style", this.$menu.data(s.style)), a.$html.removeClass(i.dropdown);
                                    });
                                var p = function (s, o) {
                                        var r = o[0],
                                            c = o[1],
                                            p = "x" == s ? "scrollLeft" : "scrollTop",
                                            u = "x" == s ? "outerWidth" : "outerHeight",
                                            f = "x" == s ? "left" : "top",
                                            v = "x" == s ? "right" : "bottom",
                                            m = "x" == s ? "width" : "height",
                                            g = "x" == s ? "maxWidth" : "maxHeight",
                                            b = null,
                                            y = a.$wndw[p](),
                                            $ = (h.offset()[f] -= y),
                                            C = $ + h[u](),
                                            w = a.$wndw[m](),
                                            x = d.offset.button[s] + d.offset.viewport[s];
                                        if (l.position[s])
                                            switch (l.position[s]) {
                                                case "left":
                                                case "bottom":
                                                    b = "after";
                                                    break;
                                                case "right":
                                                case "top":
                                                    b = "before";
                                            }
                                        null === b && (b = w / 2 > $ + (C - $) / 2 ? "after" : "before");
                                        var T, _;
                                        return (
                                            "after" == b
                                                ? ((T = "x" == s ? $ : C), (_ = w - (T + x)), (r[f] = T + d.offset.button[s]), (r[v] = "auto"), c.push(i["x" == s ? "tipleft" : "tiptop"]))
                                                : ((T = "x" == s ? C : $), (_ = T - x), (r[v] = "calc( 100% - " + (T - d.offset.button[s]) + "px )"), (r[f] = "auto"), c.push(i["x" == s ? "tipright" : "tipbottom"])),
                                            (r[g] = Math.min(t[e].configuration[n][m].max, _)),
                                            [r, c]
                                        );
                                    },
                                    u = function (t) {
                                        if (this.vars.opened) {
                                            this.$menu.attr("style", this.$menu.data(s.style));
                                            var e = [{}, []];
                                            (e = p.call(this, "y", e)),
                                                (e = p.call(this, "x", e)),
                                                this.$menu.css(e[0]),
                                                l.tip && this.$menu.removeClass(i.tipleft + " " + i.tipright + " " + i.tiptop + " " + i.tipbottom).addClass(e[1].join(" "));
                                        }
                                    };
                                this.bind("opening", u),
                                    a.$wndw.on(o.resize + "-dropdown", function (t) {
                                        u.call(r);
                                    }),
                                    this.opts.offCanvas.blockUI ||
                                        a.$wndw.on(o.scroll + "-dropdown", function (t) {
                                            u.call(r);
                                        });
                            }
                        }
                    }
                }
            },
            add: function () {
                (i = t[e]._c), (s = t[e]._d), (o = t[e]._e), i.add("dropdown tip tipleft tipright tiptop tipbottom"), o.add("mouseenter mouseleave resize scroll");
            },
            clickAnchor: function (t, e) {},
        }),
            (t[e].defaults[n] = { drop: !1, event: "click", position: {}, tip: !0 }),
            (t[e].configuration[n] = { offset: { button: { x: -10, y: 10 }, viewport: { x: 20, y: 20 } }, height: { max: 880 }, width: { max: 440 } });
        var i, s, o, a;
    })(jQuery),
    (function (t) {
        var e = "mmenu",
            n = "fixedElements";
        (t[e].addons[n] = {
            setup: function () {
                if (this.opts.offCanvas) {
                    var i = this.opts[n];
                    this.conf[n], (a = t[e].glbl), (i = this.opts[n] = t.extend(!0, {}, t[e].defaults[n], i));
                    var s = function (t) {
                        var e = this.conf.classNames[n].fixed;
                        this.__refactorClass(t.find("." + e), e, "slideout").appendTo(a.$body);
                    };
                    s.call(this, a.$page), this.bind("setPage", s);
                }
            },
            add: function () {
                (i = t[e]._c), (s = t[e]._d), (o = t[e]._e), i.add("fixed");
            },
            clickAnchor: function (t, e) {},
        }),
            (t[e].configuration.classNames[n] = { fixed: "Fixed" });
        var i, s, o, a;
    })(jQuery),
    (function (t) {
        var e = "mmenu",
            n = "iconPanels";
        (t[e].addons[n] = {
            setup: function () {
                var s = this,
                    o = this.opts[n];
                if (
                    (this.conf[n],
                    (a = t[e].glbl),
                    "boolean" == typeof o && (o = { add: o }),
                    "number" == typeof o && (o = { add: !0, visible: o }),
                    "object" != typeof o && (o = {}),
                    (o = this.opts[n] = t.extend(!0, {}, t[e].defaults[n], o)),
                    o.visible++,
                    o.add)
                ) {
                    this.$menu.addClass(i.iconpanel);
                    for (var r = [], l = 0; l <= o.visible; l++) r.push(i.iconpanel + "-" + l);
                    r = r.join(" ");
                    var d = function (e) {
                        e.hasClass(i.vertical) ||
                            s.$pnls
                                .children("." + i.panel)
                                .removeClass(r)
                                .filter("." + i.subopened)
                                .removeClass(i.hidden)
                                .add(e)
                                .not("." + i.vertical)
                                .slice(-o.visible)
                                .each(function (e) {
                                    t(this).addClass(i.iconpanel + "-" + e);
                                });
                    };
                    this.bind("openPanel", d),
                        this.bind("init", function (e) {
                            d.call(s, s.$pnls.children("." + i.current)),
                                o.hideNavbars && e.removeClass(i.hasnavbar),
                                e.not("." + i.vertical).each(function () {
                                    t(this).children("." + i.subblocker).length ||
                                        t(this).prepend(
                                            '<a href="#' +
                                                t(this)
                                                    .closest("." + i.panel)
                                                    .attr("id") +
                                                '" class="' +
                                                i.subblocker +
                                                '" />'
                                        );
                                });
                        });
                }
            },
            add: function () {
                (i = t[e]._c), (s = t[e]._d), (o = t[e]._e), i.add("iconpanel subblocker");
            },
            clickAnchor: function (t, e) {},
        }),
            (t[e].defaults[n] = { add: !1, visible: 3, hideNavbars: !1 });
        var i, s, o, a;
    })(jQuery),
    (function (t) {
        var e = "mmenu",
            n = "navbars";
        (t[e].addons[n] = {
            setup: function () {
                var s = this,
                    o = this.opts[n],
                    r = this.conf[n];
                if (((a = t[e].glbl), void 0 !== o)) {
                    o instanceof Array || (o = [o]);
                    var l = {};
                    t.each(o, function (a) {
                        var d = o[a];
                        "boolean" == typeof d && d && (d = {}), "object" != typeof d && (d = {}), void 0 === d.content && (d.content = ["prev", "title"]), d.content instanceof Array || (d.content = [d.content]);
                        var c = (d = t.extend(!0, {}, s.opts.navbar, d)).position,
                            h = d.height;
                        "number" != typeof h && (h = 1), (h = Math.min(4, Math.max(1, h))), "bottom" != c && (c = "top"), l[c] || (l[c] = 0), l[c]++;
                        var p = t("<div />").addClass(i.navbar + " " + i.navbar + "-" + c + " " + i.navbar + "-" + c + "-" + l[c] + " " + i.navbar + "-size-" + h);
                        l[c] += h - 1;
                        for (var u = 0, f = 0, v = d.content.length; v > f; f++) {
                            var m = t[e].addons[n][d.content[f]] || !1;
                            m ? (u += m.call(s, p, d, r)) : ((m = d.content[f]) instanceof t || (m = t(d.content[f])), p.append(m));
                        }
                        (u += Math.ceil(p.children().not("." + i.btn).length / h)) > 1 && p.addClass(i.navbar + "-content-" + u), p.children("." + i.btn).length && p.addClass(i.hasbtns), p.prependTo(s.$menu);
                    });
                    for (var d in l) s.$menu.addClass(i.hasnavbar + "-" + d + "-" + l[d]);
                }
            },
            add: function () {
                (i = t[e]._c), (s = t[e]._d), (o = t[e]._e), i.add("close hasbtns");
            },
            clickAnchor: function (t, e) {},
        }),
            (t[e].configuration[n] = { breadcrumbSeparator: "/" }),
            (t[e].configuration.classNames[n] = {});
        var i, s, o, a;
    })(jQuery),
    (function (t) {
        var e = "mmenu";
        t[e].addons.navbars.breadcrumbs = function (n, i, s) {
            var o = t[e]._c,
                a = t[e]._d;
            o.add("breadcrumbs separator");
            var r = t('<span class="' + o.breadcrumbs + '" />').appendTo(n);
            this.bind("init", function (e) {
                e.removeClass(o.hasnavbar).each(function () {
                    for (var e = [], n = t(this), i = t('<span class="' + o.breadcrumbs + '"></span>'), r = t(this).children().first(), l = !0; r && r.length; ) {
                        r.is("." + o.panel) || (r = r.closest("." + o.panel));
                        var d = r
                            .children("." + o.navbar)
                            .children("." + o.title)
                            .text();
                        e.unshift(l ? "<span>" + d + "</span>" : '<a href="#' + r.attr("id") + '">' + d + "</a>"), (l = !1), (r = r.data(a.parent));
                    }
                    i.append(e.join('<span class="' + o.separator + '">' + s.breadcrumbSeparator + "</span>")).appendTo(n.children("." + o.navbar));
                });
            });
            var l = function () {
                r.html(
                    this.$pnls
                        .children("." + o.current)
                        .children("." + o.navbar)
                        .children("." + o.breadcrumbs)
                        .html()
                );
            };
            return this.bind("openPanel", l), this.bind("init", l), 0;
        };
    })(jQuery),
    (function (t) {
        var e = "mmenu";
        t[e].addons.navbars.close = function (n, i) {
            var s = t[e]._c,
                o = t[e].glbl,
                a = t('<a class="' + s.close + " " + s.btn + '" href="#" />').appendTo(n),
                r = function (t) {
                    a.attr("href", "#" + t.attr("id"));
                };
            return r.call(this, o.$page), this.bind("setPage", r), -1;
        };
    })(jQuery),
    (function (t) {
        var e = "mmenu",
            n = "navbars";
        (t[e].addons[n].next = function (i, s) {
            var o,
                a,
                r = t[e]._c,
                l = t('<a class="' + r.next + " " + r.btn + '" href="#" />').appendTo(i),
                d = function (t) {
                    var e = (t = t || this.$pnls.children("." + r.current)).find("." + this.conf.classNames[n].panelNext);
                    (o = e.attr("href")), (a = e.html()), l[o ? "attr" : "removeAttr"]("href", o), l[o || a ? "removeClass" : "addClass"](r.hidden), l.html(a);
                };
            return (
                this.bind("openPanel", d),
                this.bind("init", function () {
                    d.call(this);
                }),
                -1
            );
        }),
            (t[e].configuration.classNames[n].panelNext = "Next");
    })(jQuery),
    (function (t) {
        var e = "mmenu",
            n = "navbars";
        (t[e].addons[n].prev = function (i, s) {
            var o = t[e]._c,
                a = t('<a class="' + o.prev + " " + o.btn + '" href="#" />').appendTo(i);
            this.bind("init", function (t) {
                t.removeClass(o.hasnavbar)
                    .children("." + o.navbar)
                    .addClass(o.hidden);
            });
            var r,
                l,
                d = function (t) {
                    if (!(t = t || this.$pnls.children("." + o.current)).hasClass(o.vertical)) {
                        var e = t.find("." + this.conf.classNames[n].panelPrev);
                        e.length || (e = t.children("." + o.navbar).children("." + o.prev)), (r = e.attr("href")), (l = e.html()), a[r ? "attr" : "removeAttr"]("href", r), a[r || l ? "removeClass" : "addClass"](o.hidden), a.html(l);
                    }
                };
            return (
                this.bind("openPanel", d),
                this.bind("init", function () {
                    d.call(this);
                }),
                -1
            );
        }),
            (t[e].configuration.classNames[n].panelPrev = "Prev");
    })(jQuery),
    (function (t) {
        var e = "mmenu";
        t[e].addons.navbars.searchfield = function (n, i) {
            var s = t[e]._c,
                o = t('<div class="' + s.search + '" />').appendTo(n);
            return "object" != typeof this.opts.searchfield && (this.opts.searchfield = {}), (this.opts.searchfield.add = !0), (this.opts.searchfield.addTo = o), 0;
        };
    })(jQuery),
    (function (t) {
        var e = "mmenu",
            n = "navbars";
        (t[e].addons[n].title = function (i, s) {
            var o,
                a,
                r = t[e]._c,
                l = t('<a class="' + r.title + '" />').appendTo(i),
                d = function (t) {
                    if (!(t = t || this.$pnls.children("." + r.current)).hasClass(r.vertical)) {
                        var e = t.find("." + this.conf.classNames[n].panelTitle);
                        e.length || (e = t.children("." + r.navbar).children("." + r.title)),
                            (o = e.attr("href")),
                            (a = e.html() || s.title),
                            l[o ? "attr" : "removeAttr"]("href", o),
                            l[o || a ? "removeClass" : "addClass"](r.hidden),
                            l.html(a);
                    }
                };
            return (
                this.bind("openPanel", d),
                this.bind("init", function (t) {
                    d.call(this);
                }),
                0
            );
        }),
            (t[e].configuration.classNames[n].panelTitle = "Title");
    })(jQuery),
    (function (t) {
        function e(t, e, n) {
            t.prop("aria-" + e, n)[n ? "attr" : "removeAttr"]("aria-" + e, "true");
        }
        function n(t) {
            return '<span class="' + o.sronly + '">' + t + "</span>";
        }
        var i = "mmenu",
            s = "screenReader";
        (t[i].addons[s] = {
            setup: function () {
                var a = this.opts[s],
                    r = this.conf[s];
                if (((l = t[i].glbl), "boolean" == typeof a && (a = { aria: a, text: a }), "object" != typeof a && (a = {}), (a = this.opts[s] = t.extend(!0, {}, t[i].defaults[s], a)).aria)) {
                    if (this.opts.offCanvas) {
                        var d = function () {
                            e(this.$menu, "hidden", !0);
                        };
                        this.bind("open", function () {
                            e(this.$menu, "hidden", !1);
                        }),
                            this.bind("close", d),
                            d.call(this);
                    }
                    var c = function () {
                        e(this.$menu.find("." + o.hidden), "hidden", !0), e(this.$menu.find('[aria-hidden="true"]').not("." + o.hidden), "hidden", !1);
                    };
                    this.bind("update", c),
                        this.bind("openPanel", c),
                        this.bind("openPanel", function (t) {
                            e(
                                this.$pnls
                                    .children("." + o.panel)
                                    .not(t)
                                    .not("." + o.hidden),
                                "hidden",
                                !0
                            ),
                                e(t, "hidden", !1);
                        });
                    var h = function (t) {
                        e(t.find("." + o.prev + ", ." + o.next), "haspopup", !0);
                    };
                    this.bind("init", h), h.call(this, this.$menu.children("." + o.navbar));
                }
                if (a.text) {
                    var p = function (e) {
                        e
                            .children("." + o.navbar)
                            .children("." + o.prev)
                            .html(n(r.text.closeSubmenu))
                            .end()
                            .children("." + o.next)
                            .html(n(r.text.openSubmenu))
                            .end()
                            .children("." + o.close)
                            .html(n(r.text.closeMenu)),
                            e.is("." + o.panel) &&
                                e
                                    .find("." + o.listview)
                                    .find("." + o.next)
                                    .each(function () {
                                        t(this).html(
                                            n(
                                                r.text[
                                                    t(this)
                                                        .parent()
                                                        .is("." + o.vertical)
                                                        ? "toggleSubmenu"
                                                        : "openSubmenu"
                                                ]
                                            )
                                        );
                                    });
                    };
                    this.bind("init", p), p.call(this, this.$menu);
                }
            },
            add: function () {
                (o = t[i]._c), (a = t[i]._d), (r = t[i]._e), o.add("sronly");
            },
            clickAnchor: function (t, e) {},
        }),
            (t[i].defaults[s] = { aria: !1, text: !1 }),
            (t[i].configuration[s] = { text: { closeMenu: "Close menu", closeSubmenu: "Close submenu", openSubmenu: "Open submenu", toggleSubmenu: "Toggle submenu" } });
        var o, a, r, l;
    })(jQuery),
    (function (t) {
        function e(t) {
            switch (t) {
                case 9:
                case 16:
                case 17:
                case 18:
                case 37:
                case 38:
                case 39:
                case 40:
                    return !0;
            }
            return !1;
        }
        var n = "mmenu",
            i = "searchfield";
        (t[n].addons[i] = {
            setup: function () {
                var l = this,
                    d = this.opts[i],
                    c = this.conf[i];
                (r = t[n].glbl),
                    "boolean" == typeof d && (d = { add: d }),
                    "object" != typeof d && (d = {}),
                    "boolean" == typeof d.resultsPanel && (d.resultsPanel = { add: d.resultsPanel }),
                    (d = this.opts[i] = t.extend(!0, {}, t[n].defaults[i], d)),
                    (c = this.conf[i] = t.extend(!0, {}, t[n].configuration[i], c)),
                    this.bind("close", function () {
                        this.$menu
                            .find("." + s.search)
                            .find("input")
                            .blur();
                    }),
                    this.bind("init", function (n) {
                        if (d.add) {
                            var r;
                            switch (d.addTo) {
                                case "panels":
                                    r = n;
                                    break;
                                default:
                                    r = this.$menu.find(d.addTo);
                            }
                            if (
                                (r.each(function () {
                                    var e = t(this);
                                    if (!e.is("." + s.panel) || !e.is("." + s.vertical)) {
                                        if (!e.children("." + s.search).length) {
                                            var n = l.__valueOrFn(c.clear, e),
                                                i = l.__valueOrFn(c.form, e),
                                                o = l.__valueOrFn(c.input, e),
                                                r = l.__valueOrFn(c.submit, e),
                                                h = t("<" + (i ? "form" : "div") + ' class="' + s.search + '" />'),
                                                p = t('<input placeholder="' + d.placeholder + '" type="text" autocomplete="off" />');
                                            h.append(p);
                                            var u;
                                            if (o) for (u in o) p.attr(u, o[u]);
                                            if (
                                                (n &&
                                                    t('<a class="' + s.btn + " " + s.clear + '" href="#" />')
                                                        .appendTo(h)
                                                        .on(a.click + "-searchfield", function (t) {
                                                            t.preventDefault(), p.val("").trigger(a.keyup + "-searchfield");
                                                        }),
                                                i)
                                            ) {
                                                for (u in i) h.attr(u, i[u]);
                                                r &&
                                                    !n &&
                                                    t('<a class="' + s.btn + " " + s.next + '" href="#" />')
                                                        .appendTo(h)
                                                        .on(a.click + "-searchfield", function (t) {
                                                            t.preventDefault(), h.submit();
                                                        });
                                            }
                                            e.hasClass(s.search) ? e.replaceWith(h) : e.prepend(h).addClass(s.hassearch);
                                        }
                                        if (d.noResults && (e.closest("." + s.panel).length || (e = l.$pnls.children("." + s.panel).first()), !e.children("." + s.noresultsmsg).length)) {
                                            var f = e.children("." + s.listview).first();
                                            t('<div class="' + s.noresultsmsg + " " + s.hidden + '" />')
                                                .append(d.noResults)
                                                [f.length ? "insertAfter" : "prependTo"](f.length ? f : e);
                                        }
                                    }
                                }),
                                d.search)
                            ) {
                                if (d.resultsPanel.add) {
                                    d.showSubPanels = !1;
                                    var h = this.$pnls.children("." + s.resultspanel);
                                    h.length ||
                                        ((h = t('<div class="' + s.panel + " " + s.resultspanel + " " + s.hidden + '" />')
                                            .appendTo(this.$pnls)
                                            .append('<div class="' + s.navbar + " " + s.hidden + '"><a class="' + s.title + '">' + d.resultsPanel.title + "</a></div>")
                                            .append('<ul class="' + s.listview + '" />')
                                            .append(
                                                this.$pnls
                                                    .find("." + s.noresultsmsg)
                                                    .first()
                                                    .clone()
                                            )),
                                        this.init(h));
                                }
                                this.$menu.find("." + s.search).each(function () {
                                    var n,
                                        r,
                                        c = t(this),
                                        p = c.closest("." + s.panel).length;
                                    p ? ((n = c.closest("." + s.panel)), (r = n)) : ((n = t("." + s.panel, l.$menu)), (r = l.$menu)), d.resultsPanel.add && (n = n.not(h));
                                    var u = c.children("input"),
                                        f = l.__findAddBack(n, "." + s.listview).children("li"),
                                        v = f.filter("." + s.divider),
                                        m = l.__filterListItems(f),
                                        g = "",
                                        b = function () {
                                            var e = u.val().toLowerCase();
                                            if (e != g) {
                                                if (
                                                    ((g = e),
                                                    d.resultsPanel.add && h.children("." + s.listview).empty(),
                                                    n.scrollTop(0),
                                                    m
                                                        .add(v)
                                                        .addClass(s.hidden)
                                                        .find("." + s.fullsubopensearch)
                                                        .removeClass(s.fullsubopen + " " + s.fullsubopensearch),
                                                    m.each(function () {
                                                        var e = t(this),
                                                            n = "a";
                                                        (d.showTextItems || (d.showSubPanels && e.find("." + s.next))) && (n = "a, span"),
                                                            (e.data(o.searchtext) || e.children(n).text()).toLowerCase().indexOf(g) > -1 && e.add(e.prevAll("." + s.divider).first()).removeClass(s.hidden);
                                                    }),
                                                    d.showSubPanels &&
                                                        n.each(function (e) {
                                                            var n = t(this);
                                                            l.__filterListItems(n.find("." + s.listview).children()).each(function () {
                                                                var e = t(this),
                                                                    n = e.data(o.sub);
                                                                e.removeClass(s.nosubresults),
                                                                    n &&
                                                                        n
                                                                            .find("." + s.listview)
                                                                            .children()
                                                                            .removeClass(s.hidden);
                                                            });
                                                        }),
                                                    d.resultsPanel.add)
                                                )
                                                    if ("" === g) this.closeAllPanels(), this.openPanel(this.$pnls.children("." + s.subopened).last());
                                                    else {
                                                        var i = t();
                                                        n.each(function () {
                                                            var e = l
                                                                .__filterListItems(
                                                                    t(this)
                                                                        .find("." + s.listview)
                                                                        .children()
                                                                )
                                                                .not("." + s.hidden)
                                                                .clone(!0);
                                                            e.length &&
                                                                (d.resultsPanel.dividers &&
                                                                    (i = i.add(
                                                                        '<li class="' +
                                                                            s.divider +
                                                                            '">' +
                                                                            t(this)
                                                                                .children("." + s.navbar)
                                                                                .text() +
                                                                            "</li>"
                                                                    )),
                                                                (i = i.add(e)));
                                                        }),
                                                            i.find("." + s.next).remove(),
                                                            h.children("." + s.listview).append(i),
                                                            this.openPanel(h);
                                                    }
                                                else
                                                    t(n.get().reverse()).each(function (e) {
                                                        var n = t(this),
                                                            i = n.data(o.parent);
                                                        i &&
                                                            (l.__filterListItems(n.find("." + s.listview).children()).length
                                                                ? (i.hasClass(s.hidden) &&
                                                                      i
                                                                          .children("." + s.next)
                                                                          .not("." + s.fullsubopen)
                                                                          .addClass(s.fullsubopen)
                                                                          .addClass(s.fullsubopensearch),
                                                                  i
                                                                      .removeClass(s.hidden)
                                                                      .removeClass(s.nosubresults)
                                                                      .prevAll("." + s.divider)
                                                                      .first()
                                                                      .removeClass(s.hidden))
                                                                : p ||
                                                                  (n.hasClass(s.opened) &&
                                                                      setTimeout(function () {
                                                                          l.openPanel(i.closest("." + s.panel));
                                                                      }, (e + 1) * (1.5 * l.conf.openingInterval)),
                                                                  i.addClass(s.nosubresults)));
                                                    });
                                                r.find("." + s.noresultsmsg)[m.not("." + s.hidden).length ? "addClass" : "removeClass"](s.hidden), this.update();
                                            }
                                        };
                                    u.off(a.keyup + "-" + i + " " + a.change + "-" + i)
                                        .on(a.keyup + "-" + i, function (t) {
                                            e(t.keyCode) || b.call(l);
                                        })
                                        .on(a.change + "-" + i, function (t) {
                                            b.call(l);
                                        });
                                    var y = c.children("." + s.btn);
                                    y.length &&
                                        u.on(a.keyup + "-" + i, function (t) {
                                            y[u.val().length ? "removeClass" : "addClass"](s.hidden);
                                        }),
                                        u.trigger(a.keyup + "-" + i);
                                });
                            }
                        }
                    });
            },
            add: function () {
                (s = t[n]._c), (o = t[n]._d), (a = t[n]._e), s.add("clear search hassearch resultspanel noresultsmsg noresults nosubresults fullsubopensearch"), o.add("searchtext"), a.add("change keyup");
            },
            clickAnchor: function (t, e) {},
        }),
            (t[n].defaults[i] = { add: !1, addTo: "panels", placeholder: "Search", noResults: "No results found.", resultsPanel: { add: !1, dividers: !0, title: "Search results" }, search: !0, showTextItems: !1, showSubPanels: !0 }),
            (t[n].configuration[i] = { clear: !1, form: !1, input: !1, submit: !1 });
        var s, o, a, r;
    })(jQuery),
    (function (t) {
        var e = "mmenu",
            n = "sectionIndexer";
        (t[e].addons[n] = {
            setup: function () {
                var s = this,
                    r = this.opts[n];
                this.conf[n],
                    (a = t[e].glbl),
                    "boolean" == typeof r && (r = { add: r }),
                    "object" != typeof r && (r = {}),
                    (r = this.opts[n] = t.extend(!0, {}, t[e].defaults[n], r)),
                    this.bind("init", function (e) {
                        if (r.add) {
                            var n;
                            switch (r.addTo) {
                                case "panels":
                                    n = e;
                                    break;
                                default:
                                    n = t(r.addTo, this.$menu).filter("." + i.panel);
                            }
                            n.find("." + i.divider)
                                .closest("." + i.panel)
                                .addClass(i.hasindexer);
                        }
                        if (!this.$indexer && this.$pnls.children("." + i.hasindexer).length) {
                            (this.$indexer = t('<div class="' + i.indexer + '" />')
                                .prependTo(this.$pnls)
                                .append(
                                    '<a href="#a">a</a><a href="#b">b</a><a href="#c">c</a><a href="#d">d</a><a href="#e">e</a><a href="#f">f</a><a href="#g">g</a><a href="#h">h</a><a href="#i">i</a><a href="#j">j</a><a href="#k">k</a><a href="#l">l</a><a href="#m">m</a><a href="#n">n</a><a href="#o">o</a><a href="#p">p</a><a href="#q">q</a><a href="#r">r</a><a href="#s">s</a><a href="#t">t</a><a href="#u">u</a><a href="#v">v</a><a href="#w">w</a><a href="#x">x</a><a href="#y">y</a><a href="#z">z</a>'
                                )),
                                this.$indexer.children().on(o.mouseover + "-sectionindexer " + i.touchstart + "-sectionindexer", function (e) {
                                    var n = t(this).attr("href").slice(1),
                                        o = s.$pnls.children("." + i.current),
                                        a = o.find("." + i.listview),
                                        r = !1,
                                        l = o.scrollTop();
                                    o.scrollTop(0),
                                        a
                                            .children("." + i.divider)
                                            .not("." + i.hidden)
                                            .each(function () {
                                                !1 === r && n == t(this).text().slice(0, 1).toLowerCase() && (r = t(this).position().top);
                                            }),
                                        o.scrollTop(!1 !== r ? r : l);
                                });
                            var a = function (t) {
                                s.$menu[(t.hasClass(i.hasindexer) ? "add" : "remove") + "Class"](i.hasindexer);
                            };
                            this.bind("openPanel", a), a.call(this, this.$pnls.children("." + i.current));
                        }
                    });
            },
            add: function () {
                (i = t[e]._c), (s = t[e]._d), (o = t[e]._e), i.add("indexer hasindexer"), o.add("mouseover touchstart");
            },
            clickAnchor: function (t, e) {
                return !!t.parent().is("." + i.indexer) || void 0;
            },
        }),
            (t[e].defaults[n] = { add: !1, addTo: "panels" });
        var i, s, o, a;
    })(jQuery),
    (function (t) {
        var e = "mmenu",
            n = "setSelected";
        (t[e].addons[n] = {
            setup: function () {
                var o = this.opts[n];
                if (
                    (this.conf[n],
                    (a = t[e].glbl),
                    "boolean" == typeof o && (o = { hover: o, parent: o }),
                    "object" != typeof o && (o = {}),
                    (o = this.opts[n] = t.extend(!0, {}, t[e].defaults[n], o)).current ||
                        this.bind("init", function (t) {
                            t.find("." + i.listview)
                                .children("." + i.selected)
                                .removeClass(i.selected);
                        }),
                    o.hover && this.$menu.addClass(i.hoverselected),
                    o.parent)
                ) {
                    this.$menu.addClass(i.parentselected);
                    var r = function (t) {
                        this.$pnls
                            .find("." + i.listview)
                            .find("." + i.next)
                            .removeClass(i.selected);
                        for (var e = t.data(s.parent); e && e.length; )
                            e = e
                                .children("." + i.next)
                                .addClass(i.selected)
                                .closest("." + i.panel)
                                .data(s.parent);
                    };
                    this.bind("openedPanel", r),
                        this.bind("init", function (t) {
                            r.call(this, this.$pnls.children("." + i.current));
                        });
                }
            },
            add: function () {
                (i = t[e]._c), (s = t[e]._d), (o = t[e]._e), i.add("hoverselected parentselected");
            },
            clickAnchor: function (t, e) {},
        }),
            (t[e].defaults[n] = { current: !0, hover: !1, parent: !1 });
        var i, s, o, a;
    })(jQuery),
    (function (t) {
        var e = "mmenu",
            n = "toggles";
        (t[e].addons[n] = {
            setup: function () {
                var s = this;
                this.opts[n],
                    this.conf[n],
                    (a = t[e].glbl),
                    this.bind("init", function (e) {
                        this.__refactorClass(t("input", e), this.conf.classNames[n].toggle, "toggle"),
                            this.__refactorClass(t("input", e), this.conf.classNames[n].check, "check"),
                            t("input." + i.toggle + ", input." + i.check, e).each(function () {
                                var e = t(this),
                                    n = e.closest("li"),
                                    o = e.hasClass(i.toggle) ? "toggle" : "check",
                                    a = e.attr("id") || s.__getUniqueId();
                                n.children('label[for="' + a + '"]').length || (e.attr("id", a), n.prepend(e), t('<label for="' + a + '" class="' + i[o] + '"></label>').insertBefore(n.children("a, span").last()));
                            });
                    });
            },
            add: function () {
                (i = t[e]._c), (s = t[e]._d), (o = t[e]._e), i.add("toggle check");
            },
            clickAnchor: function (t, e) {},
        }),
            (t[e].configuration.classNames[n] = { toggle: "Toggle", check: "Check" });
        var i, s, o, a;
    })(jQuery),
    (function (t) {
        "use strict";
        var e = '[data-toggle="SearchBar"]',
            n = t(t(e).data("target")),
            i = n.find('input[type="text"]'),
            s = !1,
            o = function (t) {};
        (o.prototype.toggle = function (t) {
            t.preventDefault(), s ? o.prototype.hide() : o.prototype.show();
        }),
            (o.prototype.overlayClick = function (e) {
                t(e.target).is(n) && o.prototype.hide();
            }),
            (o.prototype.escape = function (t) {
                s && 27 == t.which && (t.preventDefault(), o.prototype.hide());
            }),
            (o.prototype.show = function (t) {
                n.addClass("searchbar--visible"), i.focus(), (s = !0);
            }),
            (o.prototype.hide = function (t) {
                n.removeClass("searchbar--visible"), i.val(""), (s = !1);
            }),
            n.on("click.ergopix.searchbar", o.prototype.overlayClick),
            t(document).on("click.ergopix.searchbar", e, o.prototype.toggle),
            t(document).on("keyup.ergopix.searchbar", o.prototype.escape);
    })(jQuery);
