#!/bin/bash
#
# Task 3 - Generate an HTML page $DEST_FILE from template files and available documents under $SRC
#
# usage: Must be ran inside public_html with "../make_html" or "bash ../make_html"
#
# The generated $DEST_FILE expects that make_thumbnails has been run that source files + thumbnails are present in $ALL_FILES_SRC
# Run it via deploy script it would be easier.
#
# Nicolas Carbonara
# Antoine Leresche
# Samuel Roland

SRC=lab04_raw_files # only raw files, easier to avoid filtering thumbnails out
ALL_FILES_SRC=files # like in the example HTML
DEST_FILE=page.html

# Create the HTML for a vignette with link + img tags
# $1 must be the image path, $2 must be the thumb path
function vignette() {
    echo "<div class=\"col-md-6 col-xs-12\"><a href=\"$1\"><img class=\"vignette\" src=\"$2\" /></a></div>"
}

# Generate the thumb version from given filename as $1
function get_thumb_name() {
    file=$1
    filename="${file%.*}"
    ext="${file##*.}" # extract what's after the last point

    # The final extension for a PDF thumbnail is not .pdf but .jpg
    if [[ "${ext}" = "pdf" ]]; then
        ext="jpg"
    fi

    echo -n "${filename}_thumb.${ext}"
}

# Generate vignettes in HTML for given files
function generate_vignettes() {
    for file in $@; do
        vignette "$file" "$(get_thumb_name $file)"
    done
}

# --

# Build the full page based on begin template + 2 dynamic sections + end template
{
    cat template_begin.html

    imgs_html="$(generate_vignettes $SRC/*.{jpg,png})"
    docs_html="$(generate_vignettes $SRC/*.pdf)"

    template_middle="$(cat template_middle.html)"

    # substitute the image and document parts in [IMG_PART] and [DOC_PART]
    template_middle="${template_middle/\[IMG_PART\]/${imgs_html}}"
    template_middle="${template_middle/\[DOC_PART\]/${docs_html}}"
    echo "$template_middle"

    cat template_end.html

} >$DEST_FILE

echo Generated $DEST_FILE
